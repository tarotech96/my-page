{"ast":null,"code":"import _objectSpread from\"/Users/nguyenvancong/Desktop/my-page/clients/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";import _slicedToArray from\"/Users/nguyenvancong/Desktop/my-page/clients/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useState,useCallback}from'react';import'../Blog.css';import{Dialog,DialogTitle,DialogContent,DialogActions,Button}from'@material-ui/core';import{useDispatch}from'react-redux';import{formatDateWithPadding}from'constants/utilities';import FormInput from'components/common/input/FormInput';import FormInputTextArea from'components/common/input/FormInputTextArea';import UploadImage from'components/common/upload/UploadImage';import CustomCalendar from'components/common/calendar/CustomCalendar';import{createNewPost}from'services/postService';import{closeModal}from'redux/actions/modalAction';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";ModalCreatePost.defaultProps={isOPen:false};function ModalCreatePost(_ref){var isOpen=_ref.isOpen;var dispatch=useDispatch();var _useState=useState(''),_useState2=_slicedToArray(_useState,2),title=_useState2[0],setTitle=_useState2[1];var _useState3=useState(''),_useState4=_slicedToArray(_useState3,2),author=_useState4[0],setAuthor=_useState4[1];var _useState5=useState(''),_useState6=_slicedToArray(_useState5,2),body=_useState6[0],setBody=_useState6[1];var _useState7=useState(formatDateWithPadding(new Date(),'yyyy-MM-dd')),_useState8=_slicedToArray(_useState7,2),createdAt=_useState8[0],setCreatedAt=_useState8[1];var _useState9=useState(''),_useState10=_slicedToArray(_useState9,2),image=_useState10[0],setImage=_useState10[1];var _useState11=useState({message:'',status:false}),_useState12=_slicedToArray(_useState11,2),error=_useState12[0],setError=_useState12[1];var onSubmitForm=useCallback(function(){var params={title:title,author:author,body:body,createdAt:createdAt,image:image};createNewPost(params).then(function(data){if(data.status===1){dispatch(closeModal());}}).catch(function(error){setError(function(prevState){return _objectSpread(_objectSpread({},prevState),{},{message:error.message,status:true});});}).finally(function(){});},[title,author,body,createdAt,image,dispatch]);return/*#__PURE__*/_jsxs(\"div\",{className:\"create-form\",children:[error.status&&/*#__PURE__*/_jsx(\"span\",{children:error.message}),/*#__PURE__*/_jsxs(Dialog,{open:isOpen,onClose:function onClose(){return dispatch(closeModal());},disableBackdropClick:true,\"aria-labelledby\":\"alert-dialog-title\",\"aria-describedby\":\"alert-dialog-description\",children:[/*#__PURE__*/_jsx(DialogTitle,{id:\"alert-dialog-title\",children:\"Add new post\"}),/*#__PURE__*/_jsx(DialogContent,{children:/*#__PURE__*/_jsxs(\"form\",{noValidate:true,autoComplete:\"off\",style:{display:'flex',flexDirection:'column'},children:[/*#__PURE__*/_jsx(FormInput,{label:\"Title\",name:\"title\",setData:setTitle}),/*#__PURE__*/_jsx(FormInput,{label:\"Author\",name:\"author\",setData:setAuthor}),/*#__PURE__*/_jsx(FormInputTextArea,{rowsMin:5,rowsMax:100,label:\"Body\",placeholder:\"Enter body...\",setData:setBody}),/*#__PURE__*/_jsx(UploadImage,{setImage:setImage,imgExtension:['.jpg','.gif','.png','.gif','.jpeg'],buttonText:\"Upload image\"}),/*#__PURE__*/_jsx(CustomCalendar,{label:\"CreatedAt\",date:createdAt,setDate:setCreatedAt})]})}),/*#__PURE__*/_jsxs(DialogActions,{children:[/*#__PURE__*/_jsx(Button,{onClick:function onClick(){return dispatch(closeModal());},color:\"primary\",children:\"Cancel\"}),/*#__PURE__*/_jsx(Button,{onClick:onSubmitForm,color:\"primary\",autoFocus:true,children:\"Save\"})]})]})]});}export default ModalCreatePost;","map":{"version":3,"sources":["/Users/nguyenvancong/Desktop/my-page/clients/src/components/pages/blog/createPost/ModalCreatePost.jsx"],"names":["React","useState","useCallback","Dialog","DialogTitle","DialogContent","DialogActions","Button","useDispatch","formatDateWithPadding","FormInput","FormInputTextArea","UploadImage","CustomCalendar","createNewPost","closeModal","ModalCreatePost","defaultProps","isOPen","isOpen","dispatch","title","setTitle","author","setAuthor","body","setBody","Date","createdAt","setCreatedAt","image","setImage","message","status","error","setError","onSubmitForm","params","then","data","catch","prevState","finally","display","flexDirection"],"mappings":"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","sourcesContent":["import React, { useState, useCallback } from 'react'\nimport '../Blog.css'\nimport PropTypes from 'prop-types'\nimport { Dialog, DialogTitle, DialogContent, DialogActions, Button } from '@material-ui/core'\nimport { useDispatch } from 'react-redux'\nimport { formatDateWithPadding } from 'constants/utilities'\nimport FormInput from 'components/common/input/FormInput'\nimport FormInputTextArea from 'components/common/input/FormInputTextArea'\nimport UploadImage from 'components/common/upload/UploadImage'\nimport CustomCalendar from 'components/common/calendar/CustomCalendar'\nimport { createNewPost } from 'services/postService'\nimport { closeModal } from 'redux/actions/modalAction'\n\nModalCreatePost.propTypes = {\n  isOpen: PropTypes.bool\n}\n\nModalCreatePost.defaultProps = {\n  isOPen: false\n}\n\nfunction ModalCreatePost({ isOpen }) {\n  const dispatch = useDispatch()\n\n  const [title, setTitle] = useState('')\n  const [author, setAuthor] = useState('')\n  const [body, setBody] = useState('')\n  const [createdAt, setCreatedAt] = useState(formatDateWithPadding(new Date(), 'yyyy-MM-dd'))\n  const [image, setImage] = useState('')\n  const [error, setError] = useState({ message: '', status: false })\n\n  const onSubmitForm = useCallback(() => {\n    const params = {\n      title,\n      author,\n      body,\n      createdAt,\n      image\n    }\n    createNewPost(params)\n      .then((data) => {\n        if (data.status === 1) {\n          dispatch(closeModal())\n        }\n      })\n      .catch((error) => {\n        setError((prevState) => ({\n          ...prevState,\n          message: error.message,\n          status: true\n        }))\n      })\n      .finally(() => {})\n  }, [title, author, body, createdAt, image, dispatch])\n\n  return (\n    <div className=\"create-form\">\n      {error.status && <span>{error.message}</span>}\n      <Dialog\n        open={isOpen}\n        onClose={() => dispatch(closeModal())}\n        disableBackdropClick\n        aria-labelledby=\"alert-dialog-title\"\n        aria-describedby=\"alert-dialog-description\">\n        <DialogTitle id=\"alert-dialog-title\">Add new post</DialogTitle>\n        <DialogContent>\n          <form noValidate autoComplete=\"off\" style={{ display: 'flex', flexDirection: 'column' }}>\n            <FormInput label=\"Title\" name=\"title\" setData={setTitle} />\n            <FormInput label=\"Author\" name=\"author\" setData={setAuthor} />\n            <FormInputTextArea rowsMin={5} rowsMax={100} label=\"Body\" placeholder=\"Enter body...\" setData={setBody} />\n            <UploadImage\n              setImage={setImage}\n              imgExtension={['.jpg', '.gif', '.png', '.gif', '.jpeg']}\n              buttonText=\"Upload image\"\n            />\n            <CustomCalendar label=\"CreatedAt\" date={createdAt} setDate={setCreatedAt} />\n          </form>\n        </DialogContent>\n        <DialogActions>\n          <Button onClick={() => dispatch(closeModal())} color=\"primary\">\n            Cancel\n          </Button>\n          <Button onClick={onSubmitForm} color=\"primary\" autoFocus>\n            Save\n          </Button>\n        </DialogActions>\n      </Dialog>\n    </div>\n  )\n}\n\nexport default ModalCreatePost\n"]},"metadata":{},"sourceType":"module"}