{"ast":null,"code":"import { takeLatest, put, call } from \"redux-saga/effects\";\nimport { getPosts, createPost } from \"redux/actions/postAction.js\";\nimport * as api from \"api/api.js\";\nimport { login } from \"redux/actions/userAction\";\n\nfunction* getAllPosts() {\n  try {\n    const res = yield call(api.getPosts);\n\n    if (res.data.length) {\n      yield put(getPosts.getPostsSuccess(res.data));\n    }\n  } catch (error) {\n    yield put(getPosts.getPostsFailure(error));\n  }\n}\n\nfunction* createNewPost(action) {\n  try {\n    const res = yield call(api.createPost, action.payload);\n\n    if (res) {\n      yield put(createPost.createPostSuccess(res.data));\n    }\n  } catch (error) {\n    yield put(createPost.createPostFailure(error));\n  }\n}\n\nfunction* loginAction(action) {\n  try {\n    const res = yield call(api.login, action.payload);\n\n    if (res) {\n      yield put(login.loginSuccess(res.data));\n    }\n  } catch (error) {\n    yield put(login.loginFailure(error));\n  }\n}\n\nfunction* mySagas() {\n  yield takeLatest(getPosts.getPostsRequest, getAllPosts);\n  yield takeLatest(createPost.createPostRequest, createNewPost);\n  yield takeLatest(login.loginRequest, loginAction);\n}\n\nexport default mySagas;","map":{"version":3,"sources":["/Users/nguyenvancong/Desktop/my-page/clients/src/redux/sagas/index.js"],"names":["takeLatest","put","call","getPosts","createPost","api","login","getAllPosts","res","data","length","getPostsSuccess","error","getPostsFailure","createNewPost","action","payload","createPostSuccess","createPostFailure","loginAction","loginSuccess","loginFailure","mySagas","getPostsRequest","createPostRequest","loginRequest"],"mappings":"AAAA,SAASA,UAAT,EAAqBC,GAArB,EAA0BC,IAA1B,QAAsC,oBAAtC;AACA,SAASC,QAAT,EAAmBC,UAAnB,QAAqC,6BAArC;AACA,OAAO,KAAKC,GAAZ,MAAqB,YAArB;AACA,SAASC,KAAT,QAAsB,0BAAtB;;AAEA,UAAUC,WAAV,GAAwB;AACtB,MAAI;AACF,UAAMC,GAAG,GAAG,MAAMN,IAAI,CAACG,GAAG,CAACF,QAAL,CAAtB;;AACA,QAAIK,GAAG,CAACC,IAAJ,CAASC,MAAb,EAAqB;AACnB,YAAMT,GAAG,CAACE,QAAQ,CAACQ,eAAT,CAAyBH,GAAG,CAACC,IAA7B,CAAD,CAAT;AACD;AACF,GALD,CAKE,OAAOG,KAAP,EAAc;AACd,UAAMX,GAAG,CAACE,QAAQ,CAACU,eAAT,CAAyBD,KAAzB,CAAD,CAAT;AACD;AACF;;AAED,UAAUE,aAAV,CAAwBC,MAAxB,EAAgC;AAC9B,MAAI;AACF,UAAMP,GAAG,GAAG,MAAMN,IAAI,CAACG,GAAG,CAACD,UAAL,EAAiBW,MAAM,CAACC,OAAxB,CAAtB;;AACA,QAAIR,GAAJ,EAAS;AACP,YAAMP,GAAG,CAACG,UAAU,CAACa,iBAAX,CAA6BT,GAAG,CAACC,IAAjC,CAAD,CAAT;AACD;AACF,GALD,CAKE,OAAOG,KAAP,EAAc;AACd,UAAMX,GAAG,CAACG,UAAU,CAACc,iBAAX,CAA6BN,KAA7B,CAAD,CAAT;AACD;AACF;;AAED,UAAUO,WAAV,CAAsBJ,MAAtB,EAA8B;AAC5B,MAAI;AACF,UAAMP,GAAG,GAAG,MAAMN,IAAI,CAACG,GAAG,CAACC,KAAL,EAAYS,MAAM,CAACC,OAAnB,CAAtB;;AACA,QAAIR,GAAJ,EAAS;AACP,YAAMP,GAAG,CAACK,KAAK,CAACc,YAAN,CAAmBZ,GAAG,CAACC,IAAvB,CAAD,CAAT;AACD;AACF,GALD,CAKE,OAAOG,KAAP,EAAc;AACd,UAAMX,GAAG,CAACK,KAAK,CAACe,YAAN,CAAmBT,KAAnB,CAAD,CAAT;AACD;AACF;;AAED,UAAUU,OAAV,GAAoB;AAClB,QAAMtB,UAAU,CAACG,QAAQ,CAACoB,eAAV,EAA2BhB,WAA3B,CAAhB;AACA,QAAMP,UAAU,CAACI,UAAU,CAACoB,iBAAZ,EAA+BV,aAA/B,CAAhB;AACA,QAAMd,UAAU,CAACM,KAAK,CAACmB,YAAP,EAAqBN,WAArB,CAAhB;AACD;;AAED,eAAeG,OAAf","sourcesContent":["import { takeLatest, put, call } from \"redux-saga/effects\";\nimport { getPosts, createPost } from \"redux/actions/postAction.js\";\nimport * as api from \"api/api.js\";\nimport { login } from \"redux/actions/userAction\";\n\nfunction* getAllPosts() {\n  try {\n    const res = yield call(api.getPosts);\n    if (res.data.length) {\n      yield put(getPosts.getPostsSuccess(res.data));\n    }\n  } catch (error) {\n    yield put(getPosts.getPostsFailure(error));\n  }\n}\n\nfunction* createNewPost(action) {\n  try {\n    const res = yield call(api.createPost, action.payload);\n    if (res) {\n      yield put(createPost.createPostSuccess(res.data));\n    }\n  } catch (error) {\n    yield put(createPost.createPostFailure(error));\n  }\n}\n\nfunction* loginAction(action) {\n  try {\n    const res = yield call(api.login, action.payload);\n    if (res) {\n      yield put(login.loginSuccess(res.data));\n    }\n  } catch (error) {\n    yield put(login.loginFailure(error));\n  }\n}\n\nfunction* mySagas() {\n  yield takeLatest(getPosts.getPostsRequest, getAllPosts);\n  yield takeLatest(createPost.createPostRequest, createNewPost);\n  yield takeLatest(login.loginRequest, loginAction);\n}\n\nexport default mySagas;\n"]},"metadata":{},"sourceType":"module"}