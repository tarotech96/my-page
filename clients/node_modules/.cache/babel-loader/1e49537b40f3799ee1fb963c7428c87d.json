{"ast":null,"code":"var _jsxFileName = \"/Users/nguyenvancong/Desktop/my-page/clients/src/components/pages/blog/createPost/ModalCreatePost.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useCallback } from \"react\";\nimport \"../Blog.css\";\nimport PropTypes from \"prop-types\";\nimport { Dialog, DialogTitle, DialogContent, DialogActions, Button } from \"@material-ui/core\";\nimport { useDispatch } from \"react-redux\";\nimport { formatDateWithPadding } from \"constants/utilities\";\nimport { createPost, getPosts, closeModal } from \"redux/actions/postAction\";\nimport FormInput from \"components/common/input/FormInput\";\nimport FormInputTextArea from \"components/common/input/FormInputTextArea\";\nimport UploadImage from \"components/common/upload/UploadImage\"; // import {\n//   MuiPickersUtilsProvider,\n//   KeyboardDatePicker,\n// } from \"@material-ui/pickers\";\n// import DateFnsUtils from \"@date-io/date-fns\";\n// import localeJa from \"date-fns/locale/ja\";\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nModalCreatePost.propTypes = {\n  isOpen: PropTypes.bool\n};\nModalCreatePost.defaultProps = {\n  isOPen: false\n};\n\nfunction ModalCreatePost({\n  isOpen\n}) {\n  _s();\n\n  const dispatch = useDispatch();\n  const [title, setTitle] = useState(\"\");\n  const [author, setAuthor] = useState(\"\");\n  const [body, setBody] = useState(\"\");\n  const [createdAt, setCreatedAt] = useState(formatDateWithPadding(new Date(), \"yyyy-MM-dd\"));\n  const [image, setImage] = useState(\"\"); // const [selectedDate, setSelectedDate] = useState(\"\");\n\n  const onSubmitForm = useCallback(() => {\n    dispatch(createPost.createPostRequest({\n      title,\n      author,\n      body,\n      createdAt,\n      image\n    }));\n    dispatch(closeModal());\n    dispatch(getPosts.getPostsRequest());\n  }, [title, author, body, createdAt, image, dispatch]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"create-form\",\n    children: /*#__PURE__*/_jsxDEV(Dialog, {\n      open: isOpen,\n      onClose: () => dispatch(closeModal()),\n      disableBackdropClick: true,\n      \"aria-labelledby\": \"alert-dialog-title\",\n      \"aria-describedby\": \"alert-dialog-description\",\n      children: [/*#__PURE__*/_jsxDEV(DialogTitle, {\n        id: \"alert-dialog-title\",\n        children: \"Add new post\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(DialogContent, {\n        children: /*#__PURE__*/_jsxDEV(\"form\", {\n          noValidate: true,\n          autoComplete: \"off\",\n          style: {\n            display: \"flex\",\n            flexDirection: \"column\"\n          },\n          children: [/*#__PURE__*/_jsxDEV(FormInput, {\n            label: \"Title\",\n            setData: setTitle\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 75,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(FormInput, {\n            label: \"Author\",\n            setData: setAuthor\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 76,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(FormInputTextArea, {\n            rowsMin: 5,\n            rowsMax: 100,\n            label: \"Body\",\n            placeholder: \"Enter body...\",\n            setData: setBody\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 77,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(UploadImage, {\n            setImage: setImage,\n            imgExtension: [\".jpg\", \".gif\", \".png\", \".gif\", \".jpeg\"]\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 84,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(DialogActions, {\n        children: [/*#__PURE__*/_jsxDEV(Button, {\n          onClick: () => dispatch(closeModal()),\n          color: \"primary\",\n          children: \"Cancel\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          onClick: onSubmitForm,\n          color: \"primary\",\n          autoFocus: true,\n          children: \"Save\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 106,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 60,\n    columnNumber: 5\n  }, this);\n}\n\n_s(ModalCreatePost, \"iWhwY7NG3MkhZl+3Nje0AlTjwCQ=\", false, function () {\n  return [useDispatch];\n});\n\n_c = ModalCreatePost;\nexport default ModalCreatePost;\n\nvar _c;\n\n$RefreshReg$(_c, \"ModalCreatePost\");","map":{"version":3,"sources":["/Users/nguyenvancong/Desktop/my-page/clients/src/components/pages/blog/createPost/ModalCreatePost.jsx"],"names":["React","useState","useCallback","PropTypes","Dialog","DialogTitle","DialogContent","DialogActions","Button","useDispatch","formatDateWithPadding","createPost","getPosts","closeModal","FormInput","FormInputTextArea","UploadImage","ModalCreatePost","propTypes","isOpen","bool","defaultProps","isOPen","dispatch","title","setTitle","author","setAuthor","body","setBody","createdAt","setCreatedAt","Date","image","setImage","onSubmitForm","createPostRequest","getPostsRequest","display","flexDirection"],"mappings":"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","sourcesContent":["import React, { useState, useCallback } from \"react\";\nimport \"../Blog.css\";\nimport PropTypes from \"prop-types\";\nimport {\n  Dialog,\n  DialogTitle,\n  DialogContent,\n  DialogActions,\n  Button,\n} from \"@material-ui/core\";\nimport { useDispatch } from \"react-redux\";\nimport { formatDateWithPadding } from \"constants/utilities\";\nimport { createPost, getPosts, closeModal } from \"redux/actions/postAction\";\nimport FormInput from \"components/common/input/FormInput\";\nimport FormInputTextArea from \"components/common/input/FormInputTextArea\";\nimport UploadImage from \"components/common/upload/UploadImage\";\n// import {\n//   MuiPickersUtilsProvider,\n//   KeyboardDatePicker,\n// } from \"@material-ui/pickers\";\n// import DateFnsUtils from \"@date-io/date-fns\";\n// import localeJa from \"date-fns/locale/ja\";\n\nModalCreatePost.propTypes = {\n  isOpen: PropTypes.bool,\n};\n\nModalCreatePost.defaultProps = {\n  isOPen: false,\n};\n\nfunction ModalCreatePost({ isOpen }) {\n  const dispatch = useDispatch();\n\n  const [title, setTitle] = useState(\"\");\n  const [author, setAuthor] = useState(\"\");\n  const [body, setBody] = useState(\"\");\n  const [createdAt, setCreatedAt] = useState(\n    formatDateWithPadding(new Date(), \"yyyy-MM-dd\")\n  );\n  const [image, setImage] = useState(\"\");\n\n  // const [selectedDate, setSelectedDate] = useState(\"\");\n\n  const onSubmitForm = useCallback(() => {\n    dispatch(\n      createPost.createPostRequest({\n        title,\n        author,\n        body,\n        createdAt,\n        image,\n      })\n    );\n    dispatch(closeModal());\n    dispatch(getPosts.getPostsRequest());\n  }, [title, author, body, createdAt, image, dispatch]);\n\n  return (\n    <div className=\"create-form\">\n      <Dialog\n        open={isOpen}\n        onClose={() => dispatch(closeModal())}\n        disableBackdropClick\n        aria-labelledby=\"alert-dialog-title\"\n        aria-describedby=\"alert-dialog-description\"\n      >\n        <DialogTitle id=\"alert-dialog-title\">Add new post</DialogTitle>\n        <DialogContent>\n          <form\n            noValidate\n            autoComplete=\"off\"\n            style={{ display: \"flex\", flexDirection: \"column\" }}\n          >\n            <FormInput label=\"Title\" setData={setTitle} />\n            <FormInput label=\"Author\" setData={setAuthor} />\n            <FormInputTextArea\n              rowsMin={5}\n              rowsMax={100}\n              label=\"Body\"\n              placeholder=\"Enter body...\"\n              setData={setBody}\n            />\n            <UploadImage\n              setImage={setImage}\n              imgExtension={[\".jpg\", \".gif\", \".png\", \".gif\", \".jpeg\"]}\n            />\n            {/* <MuiPickersUtilsProvider locale={localeJa} utils={CustomDateUtils}>\n              <KeyboardDatePicker\n                margin=\"normal\"\n                label=\"CreatedAt\"\n                format=\"yyyy-MM-dd\"\n                value={selectedDate}\n                onChange={(date) => setSelectedDate(date)}\n                KeyboardButtonProps={{\n                  \"aria-label\": \"change date\",\n                }}\n              />\n            </MuiPickersUtilsProvider>  */}\n          </form>\n        </DialogContent>\n        <DialogActions>\n          <Button onClick={() => dispatch(closeModal())} color=\"primary\">\n            Cancel\n          </Button>\n          <Button onClick={onSubmitForm} color=\"primary\" autoFocus>\n            Save\n          </Button>\n        </DialogActions>\n      </Dialog>\n    </div>\n  );\n}\n\nexport default ModalCreatePost;\n"]},"metadata":{},"sourceType":"module"}