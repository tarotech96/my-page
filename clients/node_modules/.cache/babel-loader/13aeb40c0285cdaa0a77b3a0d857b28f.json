{"ast":null,"code":"import React from'react';import ReactDOM from'react-dom';import'./index.css';import'./assets/css/main.css';import App from'./App.jsx';import{Provider}from'react-redux';import{createStore,applyMiddleware,compose}from'redux';import createSagaMiddleware from'redux-saga';import{persistReducer,persistStore}from'redux-persist';import storageSession from'redux-persist/lib/storage/session';import autoMergeLevel2 from'redux-persist/lib/stateReconciler/autoMergeLevel2';import mySagas from'./redux/sagas';import appReducers from'./redux/reducers';import{PersistGate}from'redux-persist/integration/react';// create a redux middleware and connect the saga to redux store\nimport{jsx as _jsx}from\"react/jsx-runtime\";var sagaMiddleware=createSagaMiddleware();//config redux persist to save data\nvar persistConfig={key:'data',storage:storageSession,stateReconciler:autoMergeLevel2};var initialState={};//combining reducer\nvar pReducer=persistReducer(persistConfig,appReducers);var composeEnhancer=window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__||compose;// create store\nvar store=createStore(pReducer,initialState,composeEnhancer(applyMiddleware(sagaMiddleware)));// create a persistor for a given store\nvar persistor=persistStore(store);sagaMiddleware.run(mySagas);ReactDOM.render(/*#__PURE__*/_jsx(Provider,{store:store,children:/*#__PURE__*/_jsx(PersistGate,{persistor:persistor,children:/*#__PURE__*/_jsx(App,{})})}),document.getElementById('root'));","map":{"version":3,"sources":["/Users/nguyenvancong/Desktop/my-page/clients/src/index.js"],"names":["React","ReactDOM","App","Provider","createStore","applyMiddleware","compose","createSagaMiddleware","persistReducer","persistStore","storageSession","autoMergeLevel2","mySagas","appReducers","PersistGate","sagaMiddleware","persistConfig","key","storage","stateReconciler","initialState","pReducer","composeEnhancer","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","store","persistor","run","render","document","getElementById"],"mappings":"AAAA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CACA,MAAOC,CAAAA,QAAP,KAAqB,WAArB,CACA,MAAO,aAAP,CACA,MAAO,uBAAP,CACA,MAAOC,CAAAA,GAAP,KAAgB,WAAhB,CACA,OAASC,QAAT,KAAyB,aAAzB,CACA,OAASC,WAAT,CAAsBC,eAAtB,CAAuCC,OAAvC,KAAsD,OAAtD,CACA,MAAOC,CAAAA,oBAAP,KAAiC,YAAjC,CACA,OAASC,cAAT,CAAyBC,YAAzB,KAA6C,eAA7C,CACA,MAAOC,CAAAA,cAAP,KAA2B,mCAA3B,CACA,MAAOC,CAAAA,eAAP,KAA4B,mDAA5B,CACA,MAAOC,CAAAA,OAAP,KAAoB,eAApB,CACA,MAAOC,CAAAA,WAAP,KAAwB,kBAAxB,CACA,OAASC,WAAT,KAA4B,iCAA5B,CAEA;2CACA,GAAMC,CAAAA,cAAc,CAAGR,oBAAoB,EAA3C,CACA;AACA,GAAMS,CAAAA,aAAa,CAAG,CACpBC,GAAG,CAAE,MADe,CAEpBC,OAAO,CAAER,cAFW,CAGpBS,eAAe,CAAER,eAHG,CAAtB,CAMA,GAAMS,CAAAA,YAAY,CAAG,EAArB,CAEA;AACA,GAAMC,CAAAA,QAAQ,CAAGb,cAAc,CAACQ,aAAD,CAAgBH,WAAhB,CAA/B,CACA,GAAMS,CAAAA,eAAe,CAAGC,MAAM,CAACC,oCAAP,EAA+ClB,OAAvE,CAEA;AACA,GAAMmB,CAAAA,KAAK,CAAGrB,WAAW,CAACiB,QAAD,CAAWD,YAAX,CAAyBE,eAAe,CAACjB,eAAe,CAACU,cAAD,CAAhB,CAAxC,CAAzB,CAEA;AACA,GAAMW,CAAAA,SAAS,CAAGjB,YAAY,CAACgB,KAAD,CAA9B,CACAV,cAAc,CAACY,GAAf,CAAmBf,OAAnB,EAEAX,QAAQ,CAAC2B,MAAT,cACE,KAAC,QAAD,EAAU,KAAK,CAAEH,KAAjB,uBACE,KAAC,WAAD,EAAa,SAAS,CAAEC,SAAxB,uBACE,KAAC,GAAD,IADF,EADF,EADF,CAMEG,QAAQ,CAACC,cAAT,CAAwB,MAAxB,CANF","sourcesContent":["import React from 'react'\nimport ReactDOM from 'react-dom'\nimport './index.css'\nimport './assets/css/main.css'\nimport App from './App.jsx'\nimport { Provider } from 'react-redux'\nimport { createStore, applyMiddleware, compose } from 'redux'\nimport createSagaMiddleware from 'redux-saga'\nimport { persistReducer, persistStore } from 'redux-persist'\nimport storageSession from 'redux-persist/lib/storage/session'\nimport autoMergeLevel2 from 'redux-persist/lib/stateReconciler/autoMergeLevel2'\nimport mySagas from './redux/sagas'\nimport appReducers from './redux/reducers'\nimport { PersistGate } from 'redux-persist/integration/react'\n\n// create a redux middleware and connect the saga to redux store\nconst sagaMiddleware = createSagaMiddleware()\n//config redux persist to save data\nconst persistConfig = {\n  key: 'data',\n  storage: storageSession,\n  stateReconciler: autoMergeLevel2\n}\n\nconst initialState = {}\n\n//combining reducer\nconst pReducer = persistReducer(persistConfig, appReducers)\nconst composeEnhancer = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose\n\n// create store\nconst store = createStore(pReducer, initialState, composeEnhancer(applyMiddleware(sagaMiddleware)))\n\n// create a persistor for a given store\nconst persistor = persistStore(store)\nsagaMiddleware.run(mySagas)\n\nReactDOM.render(\n  <Provider store={store}>\n    <PersistGate persistor={persistor}>\n      <App />\n    </PersistGate>\n  </Provider>,\n  document.getElementById('root')\n)\n"]},"metadata":{},"sourceType":"module"}