{"ast":null,"code":"import { takeLatest, put, call, fork } from \"redux-saga/effects\";\nimport * as actions from \"./../actions/postAction\";\nimport * as api from \"./../../api/api\";\n\nfunction* getPosts() {\n  try {\n    const res = yield call(api.getPosts);\n\n    if (res.data.length) {\n      yield fork(actions.getPosts.getPostsSuccess(res.data));\n    }\n  } catch (error) {\n    yield put(actions.getPosts.getPostsFailure(error));\n  }\n}\n\nfunction* createPost(data) {\n  try {\n    const res = yield call(api.createPost(data));\n\n    if (res) {\n      yield put(actions.createPost.createPostSuccess(res.data));\n    }\n  } catch (error) {\n    yield put(actions.createPost.createPostFailure(error));\n  }\n}\n\nfunction* mySagas() {\n  yield takeLatest(actions.getPosts.getPostsRequest, getPosts);\n  yield takeLatest(actions.createPost.createPostRequest, createPost);\n}\n\nexport default mySagas;","map":{"version":3,"sources":["/Users/nguyenvancong/Desktop/my-page/clients/src/redux/sagas/index.js"],"names":["takeLatest","put","call","fork","actions","api","getPosts","res","data","length","getPostsSuccess","error","getPostsFailure","createPost","createPostSuccess","createPostFailure","mySagas","getPostsRequest","createPostRequest"],"mappings":"AAAA,SAASA,UAAT,EAAqBC,GAArB,EAA0BC,IAA1B,EAAgCC,IAAhC,QAA4C,oBAA5C;AACA,OAAO,KAAKC,OAAZ,MAAyB,yBAAzB;AACA,OAAO,KAAKC,GAAZ,MAAqB,iBAArB;;AAEA,UAAUC,QAAV,GAAqB;AACnB,MAAI;AACF,UAAMC,GAAG,GAAG,MAAML,IAAI,CAACG,GAAG,CAACC,QAAL,CAAtB;;AACA,QAAIC,GAAG,CAACC,IAAJ,CAASC,MAAb,EAAqB;AACnB,YAAMN,IAAI,CAACC,OAAO,CAACE,QAAR,CAAiBI,eAAjB,CAAiCH,GAAG,CAACC,IAArC,CAAD,CAAV;AACD;AACF,GALD,CAKE,OAAOG,KAAP,EAAc;AACd,UAAMV,GAAG,CAACG,OAAO,CAACE,QAAR,CAAiBM,eAAjB,CAAiCD,KAAjC,CAAD,CAAT;AACD;AACF;;AAED,UAAUE,UAAV,CAAqBL,IAArB,EAA2B;AACzB,MAAI;AACF,UAAMD,GAAG,GAAG,MAAML,IAAI,CAACG,GAAG,CAACQ,UAAJ,CAAeL,IAAf,CAAD,CAAtB;;AACA,QAAID,GAAJ,EAAS;AACP,YAAMN,GAAG,CAACG,OAAO,CAACS,UAAR,CAAmBC,iBAAnB,CAAqCP,GAAG,CAACC,IAAzC,CAAD,CAAT;AACD;AACF,GALD,CAKE,OAAOG,KAAP,EAAc;AACd,UAAMV,GAAG,CAACG,OAAO,CAACS,UAAR,CAAmBE,iBAAnB,CAAqCJ,KAArC,CAAD,CAAT;AACD;AACF;;AAED,UAAUK,OAAV,GAAoB;AAClB,QAAMhB,UAAU,CAACI,OAAO,CAACE,QAAR,CAAiBW,eAAlB,EAAmCX,QAAnC,CAAhB;AACA,QAAMN,UAAU,CAACI,OAAO,CAACS,UAAR,CAAmBK,iBAApB,EAAuCL,UAAvC,CAAhB;AACD;;AAED,eAAeG,OAAf","sourcesContent":["import { takeLatest, put, call, fork } from \"redux-saga/effects\";\nimport * as actions from \"./../actions/postAction\";\nimport * as api from \"./../../api/api\";\n\nfunction* getPosts() {\n  try {\n    const res = yield call(api.getPosts);\n    if (res.data.length) {\n      yield fork(actions.getPosts.getPostsSuccess(res.data));\n    }\n  } catch (error) {\n    yield put(actions.getPosts.getPostsFailure(error));\n  }\n}\n\nfunction* createPost(data) {\n  try {\n    const res = yield call(api.createPost(data));\n    if (res) {\n      yield put(actions.createPost.createPostSuccess(res.data));\n    }\n  } catch (error) {\n    yield put(actions.createPost.createPostFailure(error));\n  }\n}\n\nfunction* mySagas() {\n  yield takeLatest(actions.getPosts.getPostsRequest, getPosts);\n  yield takeLatest(actions.createPost.createPostRequest, createPost);\n}\n\nexport default mySagas;\n"]},"metadata":{},"sourceType":"module"}