{"ast":null,"code":"import _regeneratorRuntime from\"/Users/nguyenvancong/Desktop/my-page/clients/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";var _marked=/*#__PURE__*/_regeneratorRuntime.mark(loginSaga),_marked2=/*#__PURE__*/_regeneratorRuntime.mark(updateProfileSaga),_marked3=/*#__PURE__*/_regeneratorRuntime.mark(mySagas);import{takeLatest,put,call}from'redux-saga/effects';import*as api from'api/api.js';import{loginAction,updateProfileAction}from'redux/actions/userAction';function loginSaga(action){var res;return _regeneratorRuntime.wrap(function loginSaga$(_context){while(1){switch(_context.prev=_context.next){case 0:_context.prev=0;_context.next=3;return call(api.login,action.payload);case 3:res=_context.sent;if(!res){_context.next=7;break;}_context.next=7;return put(loginAction.loginSuccess(res.data));case 7:_context.next=13;break;case 9:_context.prev=9;_context.t0=_context[\"catch\"](0);_context.next=13;return put(loginAction.loginFailure(_context.t0));case 13:case\"end\":return _context.stop();}}},_marked,null,[[0,9]]);}function updateProfileSaga(action){var res;return _regeneratorRuntime.wrap(function updateProfileSaga$(_context2){while(1){switch(_context2.prev=_context2.next){case 0:_context2.prev=0;_context2.next=3;return call(api.updateProfile,action.payload);case 3:res=_context2.sent;if(!res){_context2.next=7;break;}_context2.next=7;return put(updateProfileAction.updateProfileSuccess(res.data));case 7:_context2.next=13;break;case 9:_context2.prev=9;_context2.t0=_context2[\"catch\"](0);_context2.next=13;return put(updateProfileAction.updateProfileFailure(_context2.t0));case 13:case\"end\":return _context2.stop();}}},_marked2,null,[[0,9]]);}function mySagas(){return _regeneratorRuntime.wrap(function mySagas$(_context3){while(1){switch(_context3.prev=_context3.next){case 0:_context3.next=2;return takeLatest(loginAction.loginRequest,loginSaga);case 2:_context3.next=4;return takeLatest(updateProfileAction.updateProfileRequest,updateProfileSaga);case 4:case\"end\":return _context3.stop();}}},_marked3);}export default mySagas;","map":{"version":3,"sources":["/Users/nguyenvancong/Desktop/my-page/clients/src/redux/sagas/index.js"],"names":["loginSaga","updateProfileSaga","mySagas","takeLatest","put","call","api","loginAction","updateProfileAction","action","login","payload","res","loginSuccess","data","loginFailure","updateProfile","updateProfileSuccess","updateProfileFailure","loginRequest","updateProfileRequest"],"mappings":"4MAIUA,S,iDAWAC,iB,iDAWAC,O,EA1BV,OAASC,UAAT,CAAqBC,GAArB,CAA0BC,IAA1B,KAAsC,oBAAtC,CACA,MAAO,GAAKC,CAAAA,GAAZ,KAAqB,YAArB,CACA,OAASC,WAAT,CAAsBC,mBAAtB,KAAiD,0BAAjD,CAEA,QAAUR,CAAAA,SAAV,CAAoBS,MAApB,4JAEgB,MAAMJ,CAAAA,IAAI,CAACC,GAAG,CAACI,KAAL,CAAYD,MAAM,CAACE,OAAnB,CAAV,CAFhB,OAEUC,GAFV,mBAGQA,GAHR,yCAIM,MAAMR,CAAAA,GAAG,CAACG,WAAW,CAACM,YAAZ,CAAyBD,GAAG,CAACE,IAA7B,CAAD,CAAT,CAJN,uGAOI,MAAMV,CAAAA,GAAG,CAACG,WAAW,CAACQ,YAAZ,aAAD,CAAT,CAPJ,oEAWA,QAAUd,CAAAA,iBAAV,CAA4BQ,MAA5B,yKAEgB,MAAMJ,CAAAA,IAAI,CAACC,GAAG,CAACU,aAAL,CAAoBP,MAAM,CAACE,OAA3B,CAAV,CAFhB,OAEUC,GAFV,oBAGQA,GAHR,2CAIM,MAAMR,CAAAA,GAAG,CAACI,mBAAmB,CAACS,oBAApB,CAAyCL,GAAG,CAACE,IAA7C,CAAD,CAAT,CAJN,4GAOI,MAAMV,CAAAA,GAAG,CAACI,mBAAmB,CAACU,oBAApB,cAAD,CAAT,CAPJ,sEAWA,QAAUhB,CAAAA,OAAV,uIACE,MAAMC,CAAAA,UAAU,CAACI,WAAW,CAACY,YAAb,CAA2BnB,SAA3B,CAAhB,CADF,wBAEE,MAAMG,CAAAA,UAAU,CAACK,mBAAmB,CAACY,oBAArB,CAA2CnB,iBAA3C,CAAhB,CAFF,wDAKA,cAAeC,CAAAA,OAAf","sourcesContent":["import { takeLatest, put, call } from 'redux-saga/effects'\nimport * as api from 'api/api.js'\nimport { loginAction, updateProfileAction } from 'redux/actions/userAction'\n\nfunction* loginSaga(action) {\n  try {\n    const res = yield call(api.login, action.payload)\n    if (res) {\n      yield put(loginAction.loginSuccess(res.data))\n    }\n  } catch (error) {\n    yield put(loginAction.loginFailure(error))\n  }\n}\n\nfunction* updateProfileSaga(action) {\n  try {\n    const res = yield call(api.updateProfile, action.payload)\n    if (res) {\n      yield put(updateProfileAction.updateProfileSuccess(res.data))\n    }\n  } catch (error) {\n    yield put(updateProfileAction.updateProfileFailure(error))\n  }\n}\n\nfunction* mySagas() {\n  yield takeLatest(loginAction.loginRequest, loginSaga)\n  yield takeLatest(updateProfileAction.updateProfileRequest, updateProfileSaga)\n}\n\nexport default mySagas\n"]},"metadata":{},"sourceType":"module"}