{"ast":null,"code":"var _jsxFileName = \"/Users/nguyenvancong/Desktop/my-page/clients/src/components/pages/blog/createPost/ModalCreatePost.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useCallback } from 'react';\nimport '../Blog.css';\nimport PropTypes from 'prop-types';\nimport { Dialog, DialogTitle, DialogContent, DialogActions, Button } from '@material-ui/core';\nimport { useDispatch } from 'react-redux';\nimport { formatDateWithPadding } from 'constants/utilities';\nimport FormInput from 'components/common/input/FormInput';\nimport FormInputTextArea from 'components/common/input/FormInputTextArea';\nimport UploadImage from 'components/common/upload/UploadImage';\nimport CustomCalendar from 'components/common/calendar/CustomCalendar';\nimport { createNewPost } from 'services/postService';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nModalCreatePost.propTypes = {\n  isOpen: PropTypes.bool\n};\nModalCreatePost.defaultProps = {\n  isOPen: false\n};\n\nfunction ModalCreatePost({\n  isOpen\n}) {\n  _s();\n\n  const dispatch = useDispatch();\n  const [title, setTitle] = useState('');\n  const [author, setAuthor] = useState('');\n  const [body, setBody] = useState('');\n  const [createdAt, setCreatedAt] = useState(formatDateWithPadding(new Date(), 'yyyy-MM-dd'));\n  const [image, setImage] = useState('');\n  const [error, setError] = useState({\n    message: '',\n    status: false\n  });\n  const onSubmitForm = useCallback(() => {\n    const params = {\n      title,\n      author,\n      body,\n      createdAt,\n      image\n    };\n    createNewPost(params).then(data => {\n      if (data.status === 1) {\n        dispatch(closeModal());\n      }\n    }).catch(error => {\n      setError(prevState => ({ ...prevState,\n        message: error.message,\n        status: true\n      }));\n    }).finally(() => {});\n  }, [title, author, body, createdAt, image, dispatch]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"create-form\",\n    children: [error.status && /*#__PURE__*/_jsxDEV(\"span\", {\n      children: error.message\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 24\n    }, this), /*#__PURE__*/_jsxDEV(Dialog, {\n      open: isOpen,\n      onClose: () => dispatch(closeModal()),\n      disableBackdropClick: true,\n      \"aria-labelledby\": \"alert-dialog-title\",\n      \"aria-describedby\": \"alert-dialog-description\",\n      children: [/*#__PURE__*/_jsxDEV(DialogTitle, {\n        id: \"alert-dialog-title\",\n        children: \"Add new post\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(DialogContent, {\n        children: /*#__PURE__*/_jsxDEV(\"form\", {\n          noValidate: true,\n          autoComplete: \"off\",\n          style: {\n            display: 'flex',\n            flexDirection: 'column'\n          },\n          children: [/*#__PURE__*/_jsxDEV(FormInput, {\n            label: \"Title\",\n            name: \"title\",\n            setData: setTitle\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 67,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(FormInput, {\n            label: \"Author\",\n            name: \"author\",\n            setData: setAuthor\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 68,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(FormInputTextArea, {\n            rowsMin: 5,\n            rowsMax: 100,\n            label: \"Body\",\n            placeholder: \"Enter body...\",\n            setData: setBody\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 69,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(UploadImage, {\n            setImage: setImage,\n            imgExtension: ['.jpg', '.gif', '.png', '.gif', '.jpeg'],\n            buttonText: \"Upload image\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 70,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(CustomCalendar, {\n            label: \"CreatedAt\",\n            date: createdAt,\n            setDate: setCreatedAt\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 75,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(DialogActions, {\n        children: [/*#__PURE__*/_jsxDEV(Button, {\n          onClick: () => dispatch(closeModal()),\n          color: \"primary\",\n          children: \"Cancel\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          onClick: onSubmitForm,\n          color: \"primary\",\n          autoFocus: true,\n          children: \"Save\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 56,\n    columnNumber: 5\n  }, this);\n}\n\n_s(ModalCreatePost, \"dgzpznhYn8qb0ZFeUyAyBmYp2CU=\", false, function () {\n  return [useDispatch];\n});\n\n_c = ModalCreatePost;\nexport default ModalCreatePost;\n\nvar _c;\n\n$RefreshReg$(_c, \"ModalCreatePost\");","map":{"version":3,"sources":["/Users/nguyenvancong/Desktop/my-page/clients/src/components/pages/blog/createPost/ModalCreatePost.jsx"],"names":["React","useState","useCallback","PropTypes","Dialog","DialogTitle","DialogContent","DialogActions","Button","useDispatch","formatDateWithPadding","FormInput","FormInputTextArea","UploadImage","CustomCalendar","createNewPost","ModalCreatePost","propTypes","isOpen","bool","defaultProps","isOPen","dispatch","title","setTitle","author","setAuthor","body","setBody","createdAt","setCreatedAt","Date","image","setImage","error","setError","message","status","onSubmitForm","params","then","data","closeModal","catch","prevState","finally","display","flexDirection"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,WAA1B,QAA6C,OAA7C;AACA,OAAO,aAAP;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,MAAT,EAAiBC,WAAjB,EAA8BC,aAA9B,EAA6CC,aAA7C,EAA4DC,MAA5D,QAA0E,mBAA1E;AACA,SAASC,WAAT,QAA4B,aAA5B;AACA,SAASC,qBAAT,QAAsC,qBAAtC;AACA,OAAOC,SAAP,MAAsB,mCAAtB;AACA,OAAOC,iBAAP,MAA8B,2CAA9B;AACA,OAAOC,WAAP,MAAwB,sCAAxB;AACA,OAAOC,cAAP,MAA2B,2CAA3B;AACA,SAASC,aAAT,QAA8B,sBAA9B;;AAEAC,eAAe,CAACC,SAAhB,GAA4B;AAC1BC,EAAAA,MAAM,EAAEf,SAAS,CAACgB;AADQ,CAA5B;AAIAH,eAAe,CAACI,YAAhB,GAA+B;AAC7BC,EAAAA,MAAM,EAAE;AADqB,CAA/B;;AAIA,SAASL,eAAT,CAAyB;AAAEE,EAAAA;AAAF,CAAzB,EAAqC;AAAA;;AACnC,QAAMI,QAAQ,GAAGb,WAAW,EAA5B;AAEA,QAAM,CAACc,KAAD,EAAQC,QAAR,IAAoBvB,QAAQ,CAAC,EAAD,CAAlC;AACA,QAAM,CAACwB,MAAD,EAASC,SAAT,IAAsBzB,QAAQ,CAAC,EAAD,CAApC;AACA,QAAM,CAAC0B,IAAD,EAAOC,OAAP,IAAkB3B,QAAQ,CAAC,EAAD,CAAhC;AACA,QAAM,CAAC4B,SAAD,EAAYC,YAAZ,IAA4B7B,QAAQ,CAACS,qBAAqB,CAAC,IAAIqB,IAAJ,EAAD,EAAa,YAAb,CAAtB,CAA1C;AACA,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBhC,QAAQ,CAAC,EAAD,CAAlC;AACA,QAAM,CAACiC,KAAD,EAAQC,QAAR,IAAoBlC,QAAQ,CAAC;AAAEmC,IAAAA,OAAO,EAAE,EAAX;AAAeC,IAAAA,MAAM,EAAE;AAAvB,GAAD,CAAlC;AAEA,QAAMC,YAAY,GAAGpC,WAAW,CAAC,MAAM;AACrC,UAAMqC,MAAM,GAAG;AACbhB,MAAAA,KADa;AAEbE,MAAAA,MAFa;AAGbE,MAAAA,IAHa;AAIbE,MAAAA,SAJa;AAKbG,MAAAA;AALa,KAAf;AAOAjB,IAAAA,aAAa,CAACwB,MAAD,CAAb,CACGC,IADH,CACSC,IAAD,IAAU;AACd,UAAIA,IAAI,CAACJ,MAAL,KAAgB,CAApB,EAAuB;AACrBf,QAAAA,QAAQ,CAACoB,UAAU,EAAX,CAAR;AACD;AACF,KALH,EAMGC,KANH,CAMUT,KAAD,IAAW;AAChBC,MAAAA,QAAQ,CAAES,SAAD,KAAgB,EACvB,GAAGA,SADoB;AAEvBR,QAAAA,OAAO,EAAEF,KAAK,CAACE,OAFQ;AAGvBC,QAAAA,MAAM,EAAE;AAHe,OAAhB,CAAD,CAAR;AAKD,KAZH,EAaGQ,OAbH,CAaW,MAAM,CAAE,CAbnB;AAcD,GAtB+B,EAsB7B,CAACtB,KAAD,EAAQE,MAAR,EAAgBE,IAAhB,EAAsBE,SAAtB,EAAiCG,KAAjC,EAAwCV,QAAxC,CAtB6B,CAAhC;AAwBA,sBACE;AAAK,IAAA,SAAS,EAAC,aAAf;AAAA,eACGY,KAAK,CAACG,MAAN,iBAAgB;AAAA,gBAAOH,KAAK,CAACE;AAAb;AAAA;AAAA;AAAA;AAAA,YADnB,eAEE,QAAC,MAAD;AACE,MAAA,IAAI,EAAElB,MADR;AAEE,MAAA,OAAO,EAAE,MAAMI,QAAQ,CAACoB,UAAU,EAAX,CAFzB;AAGE,MAAA,oBAAoB,MAHtB;AAIE,yBAAgB,oBAJlB;AAKE,0BAAiB,0BALnB;AAAA,8BAME,QAAC,WAAD;AAAa,QAAA,EAAE,EAAC,oBAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cANF,eAOE,QAAC,aAAD;AAAA,+BACE;AAAM,UAAA,UAAU,MAAhB;AAAiB,UAAA,YAAY,EAAC,KAA9B;AAAoC,UAAA,KAAK,EAAE;AAAEI,YAAAA,OAAO,EAAE,MAAX;AAAmBC,YAAAA,aAAa,EAAE;AAAlC,WAA3C;AAAA,kCACE,QAAC,SAAD;AAAW,YAAA,KAAK,EAAC,OAAjB;AAAyB,YAAA,IAAI,EAAC,OAA9B;AAAsC,YAAA,OAAO,EAAEvB;AAA/C;AAAA;AAAA;AAAA;AAAA,kBADF,eAEE,QAAC,SAAD;AAAW,YAAA,KAAK,EAAC,QAAjB;AAA0B,YAAA,IAAI,EAAC,QAA/B;AAAwC,YAAA,OAAO,EAAEE;AAAjD;AAAA;AAAA;AAAA;AAAA,kBAFF,eAGE,QAAC,iBAAD;AAAmB,YAAA,OAAO,EAAE,CAA5B;AAA+B,YAAA,OAAO,EAAE,GAAxC;AAA6C,YAAA,KAAK,EAAC,MAAnD;AAA0D,YAAA,WAAW,EAAC,eAAtE;AAAsF,YAAA,OAAO,EAAEE;AAA/F;AAAA;AAAA;AAAA;AAAA,kBAHF,eAIE,QAAC,WAAD;AACE,YAAA,QAAQ,EAAEK,QADZ;AAEE,YAAA,YAAY,EAAE,CAAC,MAAD,EAAS,MAAT,EAAiB,MAAjB,EAAyB,MAAzB,EAAiC,OAAjC,CAFhB;AAGE,YAAA,UAAU,EAAC;AAHb;AAAA;AAAA;AAAA;AAAA,kBAJF,eASE,QAAC,cAAD;AAAgB,YAAA,KAAK,EAAC,WAAtB;AAAkC,YAAA,IAAI,EAAEJ,SAAxC;AAAmD,YAAA,OAAO,EAAEC;AAA5D;AAAA;AAAA;AAAA;AAAA,kBATF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cAPF,eAoBE,QAAC,aAAD;AAAA,gCACE,QAAC,MAAD;AAAQ,UAAA,OAAO,EAAE,MAAMR,QAAQ,CAACoB,UAAU,EAAX,CAA/B;AAA+C,UAAA,KAAK,EAAC,SAArD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,eAIE,QAAC,MAAD;AAAQ,UAAA,OAAO,EAAEJ,YAAjB;AAA+B,UAAA,KAAK,EAAC,SAArC;AAA+C,UAAA,SAAS,MAAxD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAJF;AAAA;AAAA;AAAA;AAAA;AAAA,cApBF;AAAA;AAAA;AAAA;AAAA;AAAA,YAFF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAkCD;;GApEQtB,e;UACUP,W;;;KADVO,e;AAsET,eAAeA,eAAf","sourcesContent":["import React, { useState, useCallback } from 'react'\nimport '../Blog.css'\nimport PropTypes from 'prop-types'\nimport { Dialog, DialogTitle, DialogContent, DialogActions, Button } from '@material-ui/core'\nimport { useDispatch } from 'react-redux'\nimport { formatDateWithPadding } from 'constants/utilities'\nimport FormInput from 'components/common/input/FormInput'\nimport FormInputTextArea from 'components/common/input/FormInputTextArea'\nimport UploadImage from 'components/common/upload/UploadImage'\nimport CustomCalendar from 'components/common/calendar/CustomCalendar'\nimport { createNewPost } from 'services/postService'\n\nModalCreatePost.propTypes = {\n  isOpen: PropTypes.bool\n}\n\nModalCreatePost.defaultProps = {\n  isOPen: false\n}\n\nfunction ModalCreatePost({ isOpen }) {\n  const dispatch = useDispatch()\n\n  const [title, setTitle] = useState('')\n  const [author, setAuthor] = useState('')\n  const [body, setBody] = useState('')\n  const [createdAt, setCreatedAt] = useState(formatDateWithPadding(new Date(), 'yyyy-MM-dd'))\n  const [image, setImage] = useState('')\n  const [error, setError] = useState({ message: '', status: false })\n\n  const onSubmitForm = useCallback(() => {\n    const params = {\n      title,\n      author,\n      body,\n      createdAt,\n      image\n    }\n    createNewPost(params)\n      .then((data) => {\n        if (data.status === 1) {\n          dispatch(closeModal())\n        }\n      })\n      .catch((error) => {\n        setError((prevState) => ({\n          ...prevState,\n          message: error.message,\n          status: true\n        }))\n      })\n      .finally(() => {})\n  }, [title, author, body, createdAt, image, dispatch])\n\n  return (\n    <div className=\"create-form\">\n      {error.status && <span>{error.message}</span>}\n      <Dialog\n        open={isOpen}\n        onClose={() => dispatch(closeModal())}\n        disableBackdropClick\n        aria-labelledby=\"alert-dialog-title\"\n        aria-describedby=\"alert-dialog-description\">\n        <DialogTitle id=\"alert-dialog-title\">Add new post</DialogTitle>\n        <DialogContent>\n          <form noValidate autoComplete=\"off\" style={{ display: 'flex', flexDirection: 'column' }}>\n            <FormInput label=\"Title\" name=\"title\" setData={setTitle} />\n            <FormInput label=\"Author\" name=\"author\" setData={setAuthor} />\n            <FormInputTextArea rowsMin={5} rowsMax={100} label=\"Body\" placeholder=\"Enter body...\" setData={setBody} />\n            <UploadImage\n              setImage={setImage}\n              imgExtension={['.jpg', '.gif', '.png', '.gif', '.jpeg']}\n              buttonText=\"Upload image\"\n            />\n            <CustomCalendar label=\"CreatedAt\" date={createdAt} setDate={setCreatedAt} />\n          </form>\n        </DialogContent>\n        <DialogActions>\n          <Button onClick={() => dispatch(closeModal())} color=\"primary\">\n            Cancel\n          </Button>\n          <Button onClick={onSubmitForm} color=\"primary\" autoFocus>\n            Save\n          </Button>\n        </DialogActions>\n      </Dialog>\n    </div>\n  )\n}\n\nexport default ModalCreatePost\n"]},"metadata":{},"sourceType":"module"}