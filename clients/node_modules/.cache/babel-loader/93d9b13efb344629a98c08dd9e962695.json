{"ast":null,"code":"import { takeLatest, put, call } from 'redux-saga/effects';\nimport * as api from 'api/api.js';\nimport { loginAction, updateProfileAction } from 'redux/actions/userAction';\n\nfunction* loginSaga(action) {\n  try {\n    const res = yield call(api.login, action.payload);\n    console.log(res);\n\n    if (res) {\n      yield put(loginAction.loginSuccess(res.data));\n    }\n  } catch (error) {\n    yield put(loginAction.loginFailure(error));\n  }\n}\n\nfunction* updateProfileSaga(action) {\n  try {\n    const res = yield call(api.updateProfile, action.payload);\n\n    if (res) {\n      yield put(updateProfileAction.updateProfileSuccess(res.data));\n    }\n  } catch (error) {\n    yield put(updateProfileAction.updateProfileFailure(error));\n  }\n}\n\nfunction* mySagas() {\n  yield takeLatest(loginAction.loginRequest, loginSaga);\n  yield takeLatest(updateProfileAction.updateProfileRequest, updateProfileSaga);\n}\n\nexport default mySagas;","map":{"version":3,"sources":["/Users/nguyenvancong/Desktop/my-page/clients/src/redux/sagas/index.js"],"names":["takeLatest","put","call","api","loginAction","updateProfileAction","loginSaga","action","res","login","payload","console","log","loginSuccess","data","error","loginFailure","updateProfileSaga","updateProfile","updateProfileSuccess","updateProfileFailure","mySagas","loginRequest","updateProfileRequest"],"mappings":"AAAA,SAASA,UAAT,EAAqBC,GAArB,EAA0BC,IAA1B,QAAsC,oBAAtC;AACA,OAAO,KAAKC,GAAZ,MAAqB,YAArB;AACA,SAASC,WAAT,EAAsBC,mBAAtB,QAAiD,0BAAjD;;AAEA,UAAUC,SAAV,CAAoBC,MAApB,EAA4B;AAC1B,MAAI;AACF,UAAMC,GAAG,GAAG,MAAMN,IAAI,CAACC,GAAG,CAACM,KAAL,EAAYF,MAAM,CAACG,OAAnB,CAAtB;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAYJ,GAAZ;;AACA,QAAIA,GAAJ,EAAS;AACP,YAAMP,GAAG,CAACG,WAAW,CAACS,YAAZ,CAAyBL,GAAG,CAACM,IAA7B,CAAD,CAAT;AACD;AACF,GAND,CAME,OAAOC,KAAP,EAAc;AACd,UAAMd,GAAG,CAACG,WAAW,CAACY,YAAZ,CAAyBD,KAAzB,CAAD,CAAT;AACD;AACF;;AAED,UAAUE,iBAAV,CAA4BV,MAA5B,EAAoC;AAClC,MAAI;AACF,UAAMC,GAAG,GAAG,MAAMN,IAAI,CAACC,GAAG,CAACe,aAAL,EAAoBX,MAAM,CAACG,OAA3B,CAAtB;;AACA,QAAIF,GAAJ,EAAS;AACP,YAAMP,GAAG,CAACI,mBAAmB,CAACc,oBAApB,CAAyCX,GAAG,CAACM,IAA7C,CAAD,CAAT;AACD;AACF,GALD,CAKE,OAAOC,KAAP,EAAc;AACd,UAAMd,GAAG,CAACI,mBAAmB,CAACe,oBAApB,CAAyCL,KAAzC,CAAD,CAAT;AACD;AACF;;AAED,UAAUM,OAAV,GAAoB;AAClB,QAAMrB,UAAU,CAACI,WAAW,CAACkB,YAAb,EAA2BhB,SAA3B,CAAhB;AACA,QAAMN,UAAU,CAACK,mBAAmB,CAACkB,oBAArB,EAA2CN,iBAA3C,CAAhB;AACD;;AAED,eAAeI,OAAf","sourcesContent":["import { takeLatest, put, call } from 'redux-saga/effects'\nimport * as api from 'api/api.js'\nimport { loginAction, updateProfileAction } from 'redux/actions/userAction'\n\nfunction* loginSaga(action) {\n  try {\n    const res = yield call(api.login, action.payload)\n    console.log(res)\n    if (res) {\n      yield put(loginAction.loginSuccess(res.data))\n    }\n  } catch (error) {\n    yield put(loginAction.loginFailure(error))\n  }\n}\n\nfunction* updateProfileSaga(action) {\n  try {\n    const res = yield call(api.updateProfile, action.payload)\n    if (res) {\n      yield put(updateProfileAction.updateProfileSuccess(res.data))\n    }\n  } catch (error) {\n    yield put(updateProfileAction.updateProfileFailure(error))\n  }\n}\n\nfunction* mySagas() {\n  yield takeLatest(loginAction.loginRequest, loginSaga)\n  yield takeLatest(updateProfileAction.updateProfileRequest, updateProfileSaga)\n}\n\nexport default mySagas\n"]},"metadata":{},"sourceType":"module"}