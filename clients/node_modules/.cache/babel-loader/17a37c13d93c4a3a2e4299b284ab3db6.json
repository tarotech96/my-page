{"ast":null,"code":"import { initialState } from 'redux/states/user';\nimport { loginAction, updateProfileAction } from 'redux/actions/userAction';\nimport { getType } from 'constants/utilities';\nimport { LOGOUT } from 'constants/actionType';\n\nconst userReducers = (state = initialState, action) => {\n  switch (action.type) {\n    case getType(loginAction.loginSuccess):\n      return { ...state,\n        isLogin: true,\n        userInfo: action.payload\n      };\n\n    case getType(loginAction.loginFailure):\n      return { ...state,\n        error: action.payload\n      };\n\n    case LOGOUT:\n      sessionStorage.clear();\n      return { ...state,\n        isLogin: false,\n        userInfo: {},\n        isSuccess: false\n      };\n\n    case getType(updateProfileAction.updateProfileSuccess):\n      return { ...state,\n        userInfo: { ...state.userInfo,\n          ...action.payload\n        }\n      };\n\n    case getType(updateProfileAction.updateProfileFailure):\n      return { ...state,\n        error: action.payload\n      };\n\n    default:\n      return state;\n  }\n};\n\nexport default userReducers;","map":{"version":3,"sources":["/Users/nguyenvancong/Desktop/my-page/clients/src/redux/reducers/userReducer.js"],"names":["initialState","loginAction","updateProfileAction","getType","LOGOUT","userReducers","state","action","type","loginSuccess","isLogin","userInfo","payload","loginFailure","error","sessionStorage","clear","isSuccess","updateProfileSuccess","updateProfileFailure"],"mappings":"AAAA,SAASA,YAAT,QAA6B,mBAA7B;AACA,SAASC,WAAT,EAAsBC,mBAAtB,QAAiD,0BAAjD;AACA,SAASC,OAAT,QAAwB,qBAAxB;AACA,SAASC,MAAT,QAAuB,sBAAvB;;AAEA,MAAMC,YAAY,GAAG,CAACC,KAAK,GAAGN,YAAT,EAAuBO,MAAvB,KAAkC;AACrD,UAAQA,MAAM,CAACC,IAAf;AACE,SAAKL,OAAO,CAACF,WAAW,CAACQ,YAAb,CAAZ;AACE,aAAO,EACL,GAAGH,KADE;AAELI,QAAAA,OAAO,EAAE,IAFJ;AAGLC,QAAAA,QAAQ,EAAEJ,MAAM,CAACK;AAHZ,OAAP;;AAKF,SAAKT,OAAO,CAACF,WAAW,CAACY,YAAb,CAAZ;AACE,aAAO,EACL,GAAGP,KADE;AAELQ,QAAAA,KAAK,EAAEP,MAAM,CAACK;AAFT,OAAP;;AAIF,SAAKR,MAAL;AACEW,MAAAA,cAAc,CAACC,KAAf;AACA,aAAO,EACL,GAAGV,KADE;AAELI,QAAAA,OAAO,EAAE,KAFJ;AAGLC,QAAAA,QAAQ,EAAE,EAHL;AAILM,QAAAA,SAAS,EAAE;AAJN,OAAP;;AAMF,SAAKd,OAAO,CAACD,mBAAmB,CAACgB,oBAArB,CAAZ;AACE,aAAO,EACL,GAAGZ,KADE;AAELK,QAAAA,QAAQ,EAAE,EACR,GAAGL,KAAK,CAACK,QADD;AAER,aAAGJ,MAAM,CAACK;AAFF;AAFL,OAAP;;AAOF,SAAKT,OAAO,CAACD,mBAAmB,CAACiB,oBAArB,CAAZ;AACE,aAAO,EACL,GAAGb,KADE;AAELQ,QAAAA,KAAK,EAAEP,MAAM,CAACK;AAFT,OAAP;;AAIF;AACE,aAAON,KAAP;AAlCJ;AAoCD,CArCD;;AAuCA,eAAeD,YAAf","sourcesContent":["import { initialState } from 'redux/states/user'\nimport { loginAction, updateProfileAction } from 'redux/actions/userAction'\nimport { getType } from 'constants/utilities'\nimport { LOGOUT } from 'constants/actionType'\n\nconst userReducers = (state = initialState, action) => {\n  switch (action.type) {\n    case getType(loginAction.loginSuccess):\n      return {\n        ...state,\n        isLogin: true,\n        userInfo: action.payload\n      }\n    case getType(loginAction.loginFailure):\n      return {\n        ...state,\n        error: action.payload\n      }\n    case LOGOUT:\n      sessionStorage.clear()\n      return {\n        ...state,\n        isLogin: false,\n        userInfo: {},\n        isSuccess: false\n      }\n    case getType(updateProfileAction.updateProfileSuccess):\n      return {\n        ...state,\n        userInfo: {\n          ...state.userInfo,\n          ...action.payload\n        }\n      }\n    case getType(updateProfileAction.updateProfileFailure):\n      return {\n        ...state,\n        error: action.payload\n      }\n    default:\n      return state\n  }\n}\n\nexport default userReducers\n"]},"metadata":{},"sourceType":"module"}