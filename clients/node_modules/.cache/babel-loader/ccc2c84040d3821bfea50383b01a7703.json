{"ast":null,"code":"import { initialState } from \"../states/post\";\nimport { getPosts, createPost } from \"redux/actions/postAction\";\nimport { getType } from \"constants/utilities\";\n\nconst postReducers = (state = initialState, action) => {\n  switch (action.type) {\n    case getType(getPosts.getPostsRequest):\n      return { ...state,\n        isLoading: true\n      };\n\n    case getType(getPosts.getPostsSuccess):\n      return { ...state,\n        isLoading: true,\n        data: action.payload\n      };\n\n    case getType(getPosts.getPostsFailure):\n      return { ...state,\n        isLoading: false,\n        data: []\n      };\n\n    case getType(createPost.createPostSuccess):\n      return { ...state,\n        isSucceeded: true\n      };\n\n    default:\n      return state;\n  }\n};\n\nexport default postReducers;","map":{"version":3,"sources":["/Users/nguyenvancong/Desktop/my-page/clients/src/redux/reducers/postReducer.js"],"names":["initialState","getPosts","createPost","getType","postReducers","state","action","type","getPostsRequest","isLoading","getPostsSuccess","data","payload","getPostsFailure","createPostSuccess","isSucceeded"],"mappings":"AAAA,SAASA,YAAT,QAA6B,gBAA7B;AACA,SAASC,QAAT,EAAmBC,UAAnB,QAAqC,0BAArC;AACA,SAASC,OAAT,QAAwB,qBAAxB;;AAEA,MAAMC,YAAY,GAAG,CAACC,KAAK,GAAGL,YAAT,EAAuBM,MAAvB,KAAkC;AACrD,UAAQA,MAAM,CAACC,IAAf;AACE,SAAKJ,OAAO,CAACF,QAAQ,CAACO,eAAV,CAAZ;AACE,aAAO,EACL,GAAGH,KADE;AAELI,QAAAA,SAAS,EAAE;AAFN,OAAP;;AAIF,SAAKN,OAAO,CAACF,QAAQ,CAACS,eAAV,CAAZ;AACE,aAAO,EACL,GAAGL,KADE;AAELI,QAAAA,SAAS,EAAE,IAFN;AAGLE,QAAAA,IAAI,EAAEL,MAAM,CAACM;AAHR,OAAP;;AAKF,SAAKT,OAAO,CAACF,QAAQ,CAACY,eAAV,CAAZ;AACE,aAAO,EACL,GAAGR,KADE;AAELI,QAAAA,SAAS,EAAE,KAFN;AAGLE,QAAAA,IAAI,EAAE;AAHD,OAAP;;AAKF,SAAKR,OAAO,CAACD,UAAU,CAACY,iBAAZ,CAAZ;AACE,aAAO,EACL,GAAGT,KADE;AAELU,QAAAA,WAAW,EAAE;AAFR,OAAP;;AAIF;AACE,aAAOV,KAAP;AAxBJ;AA0BD,CA3BD;;AA6BA,eAAeD,YAAf","sourcesContent":["import { initialState } from \"../states/post\";\nimport { getPosts, createPost } from \"redux/actions/postAction\";\nimport { getType } from \"constants/utilities\";\n\nconst postReducers = (state = initialState, action) => {\n  switch (action.type) {\n    case getType(getPosts.getPostsRequest):\n      return {\n        ...state,\n        isLoading: true,\n      };\n    case getType(getPosts.getPostsSuccess):\n      return {\n        ...state,\n        isLoading: true,\n        data: action.payload,\n      };\n    case getType(getPosts.getPostsFailure):\n      return {\n        ...state,\n        isLoading: false,\n        data: [],\n      };\n    case getType(createPost.createPostSuccess):\n      return {\n        ...state,\n        isSucceeded: true,\n      };\n    default:\n      return state;\n  }\n};\n\nexport default postReducers;\n"]},"metadata":{},"sourceType":"module"}