{"ast":null,"code":"import { initialState } from \"../states/post\";\nimport { getType, getPosts, createPost } from \"../actions/postAction\";\n\nconst getAllPosts = (state = initialState.posts, action) => {\n  switch (action.type) {\n    case getType(getPosts.getPostsRequest):\n      return { ...state,\n        isLoading: true\n      };\n\n    case getType(getPosts.getPostsSuccess):\n      return { ...state,\n        isLoading: true,\n        data: action.payload\n      };\n\n    case getType(getPosts.getPostsFailure):\n      return { ...state,\n        isLoading: false,\n        data: []\n      };\n\n    default:\n      return state;\n  }\n};\n\nconst createNewPost = (state = initialState.post, action) => {\n  switch (action.type) {\n    case getType(createPost.createPostRequest):\n      return { ...state,\n        isSucceeded: false\n      };\n\n    case getType(createPost.createPostSuccess):\n      return { ...state,\n        isSucceeded: true,\n        data: action.payload\n      };\n\n    case getType(createPost.createPostFailure):\n      return { ...state,\n        isSucceeded: false\n      };\n\n    default:\n      return state;\n  }\n};\n\nexport { getAllPosts, createNewPost };","map":{"version":3,"sources":["/Users/nguyenvancong/Desktop/my-page/clients/src/redux/reducers/postReducer.js"],"names":["initialState","getType","getPosts","createPost","getAllPosts","state","posts","action","type","getPostsRequest","isLoading","getPostsSuccess","data","payload","getPostsFailure","createNewPost","post","createPostRequest","isSucceeded","createPostSuccess","createPostFailure"],"mappings":"AAAA,SAASA,YAAT,QAA6B,gBAA7B;AACA,SAASC,OAAT,EAAkBC,QAAlB,EAA4BC,UAA5B,QAA8C,uBAA9C;;AAEA,MAAMC,WAAW,GAAG,CAACC,KAAK,GAAGL,YAAY,CAACM,KAAtB,EAA6BC,MAA7B,KAAwC;AAC1D,UAAQA,MAAM,CAACC,IAAf;AACE,SAAKP,OAAO,CAACC,QAAQ,CAACO,eAAV,CAAZ;AACE,aAAO,EACL,GAAGJ,KADE;AAELK,QAAAA,SAAS,EAAE;AAFN,OAAP;;AAIF,SAAKT,OAAO,CAACC,QAAQ,CAACS,eAAV,CAAZ;AACE,aAAO,EACL,GAAGN,KADE;AAELK,QAAAA,SAAS,EAAE,IAFN;AAGLE,QAAAA,IAAI,EAAEL,MAAM,CAACM;AAHR,OAAP;;AAKF,SAAKZ,OAAO,CAACC,QAAQ,CAACY,eAAV,CAAZ;AACE,aAAO,EACL,GAAGT,KADE;AAELK,QAAAA,SAAS,EAAE,KAFN;AAGLE,QAAAA,IAAI,EAAE;AAHD,OAAP;;AAKF;AACE,aAAOP,KAAP;AAnBJ;AAqBD,CAtBD;;AAwBA,MAAMU,aAAa,GAAG,CAACV,KAAK,GAAGL,YAAY,CAACgB,IAAtB,EAA4BT,MAA5B,KAAuC;AAC3D,UAAQA,MAAM,CAACC,IAAf;AACE,SAAKP,OAAO,CAACE,UAAU,CAACc,iBAAZ,CAAZ;AACE,aAAO,EACL,GAAGZ,KADE;AAELa,QAAAA,WAAW,EAAE;AAFR,OAAP;;AAIF,SAAKjB,OAAO,CAACE,UAAU,CAACgB,iBAAZ,CAAZ;AACE,aAAO,EACL,GAAGd,KADE;AAELa,QAAAA,WAAW,EAAE,IAFR;AAGLN,QAAAA,IAAI,EAAEL,MAAM,CAACM;AAHR,OAAP;;AAKF,SAAKZ,OAAO,CAACE,UAAU,CAACiB,iBAAZ,CAAZ;AACE,aAAO,EACL,GAAGf,KADE;AAELa,QAAAA,WAAW,EAAE;AAFR,OAAP;;AAIF;AACE,aAAOb,KAAP;AAlBJ;AAoBD,CArBD;;AAuBA,SAASD,WAAT,EAAsBW,aAAtB","sourcesContent":["import { initialState } from \"../states/post\";\nimport { getType, getPosts, createPost } from \"../actions/postAction\";\n\nconst getAllPosts = (state = initialState.posts, action) => {\n  switch (action.type) {\n    case getType(getPosts.getPostsRequest):\n      return {\n        ...state,\n        isLoading: true,\n      };\n    case getType(getPosts.getPostsSuccess):\n      return {\n        ...state,\n        isLoading: true,\n        data: action.payload,\n      };\n    case getType(getPosts.getPostsFailure):\n      return {\n        ...state,\n        isLoading: false,\n        data: [],\n      };\n    default:\n      return state;\n  }\n};\n\nconst createNewPost = (state = initialState.post, action) => {\n  switch (action.type) {\n    case getType(createPost.createPostRequest):\n      return {\n        ...state,\n        isSucceeded: false,\n      };\n    case getType(createPost.createPostSuccess):\n      return {\n        ...state,\n        isSucceeded: true,\n        data: action.payload,\n      };\n    case getType(createPost.createPostFailure):\n      return {\n        ...state,\n        isSucceeded: false,\n      };\n    default:\n      return state;\n  }\n};\n\nexport { getAllPosts, createNewPost };\n"]},"metadata":{},"sourceType":"module"}