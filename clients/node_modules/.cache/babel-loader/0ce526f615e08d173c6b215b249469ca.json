{"ast":null,"code":"var _jsxFileName = \"/Users/nguyenvancong/Desktop/my-page/clients/src/components/pages/blog/Blog.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport './Blog.css';\nimport { Grid, Button } from '@material-ui/core';\nimport PostItem from './PostItem';\nimport { useDispatch, useSelector } from 'react-redux';\nimport ModalCreatePost from './createPost/ModalCreatePost';\nimport { getAllPost } from 'services/postService';\nimport { openModal } from 'redux/actions/modalAction';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Blog() {\n  _s();\n\n  const dispatch = useDispatch();\n  const [data, setData] = useState([]);\n  const [error, setError] = useState({\n    message: '',\n    status: false\n  });\n  const {\n    isOpen\n  } = useSelector(state => state.modalReducers); //ComponentDidMount\n\n  useEffect(() => {\n    getAllPost().then(data => {\n      if (data.data.length) {\n        setData(data.data);\n      }\n    }).catch(error => {\n      setError(prevState => ({ ...prevState,\n        message: error.message,\n        status: true\n      }));\n    }).finally(() => {});\n  }, [dispatch]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"bl__container\",\n    children: [error.status && /*#__PURE__*/_jsxDEV(\"span\", {\n      children: error.message\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 24\n    }, this), /*#__PURE__*/_jsxDEV(Grid, {\n      children: [isOpen && /*#__PURE__*/_jsxDEV(ModalCreatePost, {\n        isOpen: isOpen\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 20\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 12,\n        sm: 12,\n        children: /*#__PURE__*/_jsxDEV(Grid, {\n          container: true,\n          justify: \"center\",\n          children: data && data.length ? data.map((item, index) => /*#__PURE__*/_jsxDEV(PostItem, {\n            item: item,\n            sttItem: index + 1\n          }, index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 42,\n            columnNumber: 43\n          }, this)) : ''\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      onClick: () => dispatch(openModal()),\n      className: \"bl__btn-add\",\n      children: /*#__PURE__*/_jsxDEV(\"i\", {\n        className: \"fas fa-plus-circle\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Blog, \"C/Ckei2T3kjhaTTXlOLc1A/7GBU=\", false, function () {\n  return [useDispatch, useSelector];\n});\n\n_c = Blog;\nexport default Blog;\n\nvar _c;\n\n$RefreshReg$(_c, \"Blog\");","map":{"version":3,"sources":["/Users/nguyenvancong/Desktop/my-page/clients/src/components/pages/blog/Blog.jsx"],"names":["React","useState","useEffect","Grid","Button","PostItem","useDispatch","useSelector","ModalCreatePost","getAllPost","openModal","Blog","dispatch","data","setData","error","setError","message","status","isOpen","state","modalReducers","then","length","catch","prevState","finally","map","item","index"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAO,YAAP;AACA,SAASC,IAAT,EAAeC,MAAf,QAA6B,mBAA7B;AACA,OAAOC,QAAP,MAAqB,YAArB;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,OAAOC,eAAP,MAA4B,8BAA5B;AACA,SAASC,UAAT,QAA2B,sBAA3B;AACA,SAASC,SAAT,QAA0B,2BAA1B;;;AAEA,SAASC,IAAT,GAAgB;AAAA;;AACd,QAAMC,QAAQ,GAAGN,WAAW,EAA5B;AACA,QAAM,CAACO,IAAD,EAAOC,OAAP,IAAkBb,QAAQ,CAAC,EAAD,CAAhC;AACA,QAAM,CAACc,KAAD,EAAQC,QAAR,IAAoBf,QAAQ,CAAC;AAAEgB,IAAAA,OAAO,EAAE,EAAX;AAAeC,IAAAA,MAAM,EAAE;AAAvB,GAAD,CAAlC;AACA,QAAM;AAAEC,IAAAA;AAAF,MAAaZ,WAAW,CAAEa,KAAD,IAAWA,KAAK,CAACC,aAAlB,CAA9B,CAJc,CAMd;;AACAnB,EAAAA,SAAS,CAAC,MAAM;AACdO,IAAAA,UAAU,GACPa,IADH,CACST,IAAD,IAAU;AACd,UAAIA,IAAI,CAACA,IAAL,CAAUU,MAAd,EAAsB;AACpBT,QAAAA,OAAO,CAACD,IAAI,CAACA,IAAN,CAAP;AACD;AACF,KALH,EAMGW,KANH,CAMUT,KAAD,IAAW;AAChBC,MAAAA,QAAQ,CAAES,SAAD,KAAgB,EACvB,GAAGA,SADoB;AAEvBR,QAAAA,OAAO,EAAEF,KAAK,CAACE,OAFQ;AAGvBC,QAAAA,MAAM,EAAE;AAHe,OAAhB,CAAD,CAAR;AAKD,KAZH,EAaGQ,OAbH,CAaW,MAAM,CAAE,CAbnB;AAcD,GAfQ,EAeN,CAACd,QAAD,CAfM,CAAT;AAiBA,sBACE;AAAK,IAAA,SAAS,EAAC,eAAf;AAAA,eACGG,KAAK,CAACG,MAAN,iBAAgB;AAAA,gBAAOH,KAAK,CAACE;AAAb;AAAA;AAAA;AAAA;AAAA,YADnB,eAEE,QAAC,IAAD;AAAA,iBACGE,MAAM,iBAAI,QAAC,eAAD;AAAiB,QAAA,MAAM,EAAEA;AAAzB;AAAA;AAAA;AAAA;AAAA,cADb,eAEE,QAAC,IAAD;AAAM,QAAA,IAAI,MAAV;AAAW,QAAA,EAAE,EAAE,EAAf;AAAmB,QAAA,EAAE,EAAE,EAAvB;AAAA,+BACE,QAAC,IAAD;AAAM,UAAA,SAAS,MAAf;AAAgB,UAAA,OAAO,EAAC,QAAxB;AAAA,oBACGN,IAAI,IAAIA,IAAI,CAACU,MAAb,GACGV,IAAI,CAACc,GAAL,CAAS,CAACC,IAAD,EAAOC,KAAP,kBAAiB,QAAC,QAAD;AAAsB,YAAA,IAAI,EAAED,IAA5B;AAAkC,YAAA,OAAO,EAAEC,KAAK,GAAG;AAAnD,aAAeA,KAAf;AAAA;AAAA;AAAA;AAAA,kBAA1B,CADH,GAEG;AAHN;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cAFF;AAAA;AAAA;AAAA;AAAA;AAAA,YAFF,eAYE,QAAC,MAAD;AAAQ,MAAA,OAAO,EAAE,MAAMjB,QAAQ,CAACF,SAAS,EAAV,CAA/B;AAA8C,MAAA,SAAS,EAAC,aAAxD;AAAA,6BACE;AAAG,QAAA,SAAS,EAAC;AAAb;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YAZF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAkBD;;GA1CQC,I;UACUL,W,EAGEC,W;;;KAJZI,I;AA4CT,eAAeA,IAAf","sourcesContent":["import React, { useState, useEffect } from 'react'\nimport './Blog.css'\nimport { Grid, Button } from '@material-ui/core'\nimport PostItem from './PostItem'\nimport { useDispatch, useSelector } from 'react-redux'\nimport ModalCreatePost from './createPost/ModalCreatePost'\nimport { getAllPost } from 'services/postService'\nimport { openModal } from 'redux/actions/modalAction'\n\nfunction Blog() {\n  const dispatch = useDispatch()\n  const [data, setData] = useState([])\n  const [error, setError] = useState({ message: '', status: false })\n  const { isOpen } = useSelector((state) => state.modalReducers)\n\n  //ComponentDidMount\n  useEffect(() => {\n    getAllPost()\n      .then((data) => {\n        if (data.data.length) {\n          setData(data.data)\n        }\n      })\n      .catch((error) => {\n        setError((prevState) => ({\n          ...prevState,\n          message: error.message,\n          status: true\n        }))\n      })\n      .finally(() => {})\n  }, [dispatch])\n\n  return (\n    <div className=\"bl__container\">\n      {error.status && <span>{error.message}</span>}\n      <Grid>\n        {isOpen && <ModalCreatePost isOpen={isOpen} />}\n        <Grid item xs={12} sm={12}>\n          <Grid container justify=\"center\">\n            {data && data.length\n              ? data.map((item, index) => <PostItem key={index} item={item} sttItem={index + 1} />)\n              : ''}\n          </Grid>\n        </Grid>\n      </Grid>\n      <Button onClick={() => dispatch(openModal())} className=\"bl__btn-add\">\n        <i className=\"fas fa-plus-circle\"></i>\n      </Button>\n    </div>\n  )\n}\n\nexport default Blog\n"]},"metadata":{},"sourceType":"module"}