{"ast":null,"code":"var _jsxFileName = \"/Users/nguyenvancong/Desktop/my-page/clients/src/components/pages/register/Register.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useCallback } from 'react';\nimport { Card, CardHeader, CardContent, CardActions, Button } from '@material-ui/core';\nimport FormInput from 'components/common/input/FormInput';\nimport { registerUser } from 'services/userService';\nimport { useHistory } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Register() {\n  _s();\n\n  const history = useHistory();\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const [error, setError] = useState({\n    message: '',\n    status: false\n  }); // Handle register\n\n  const handleRegister = useCallback(() => {\n    registerUser({\n      email,\n      password\n    }).then(data => {\n      if (data.user) {\n        history.push('/login');\n      }\n    }).catch(error => {\n      setError(prevState => ({ ...prevState,\n        message: error.message,\n        status: true\n      }));\n    }).finally(() => {});\n  }, [email, password, history]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"register login\",\n    children: [error.status && /*#__PURE__*/_jsxDEV(\"span\", {\n      children: error.message\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 24\n    }, this), /*#__PURE__*/_jsxDEV(Card, {\n      children: [/*#__PURE__*/_jsxDEV(CardHeader, {\n        title: \"Register\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(CardContent, {\n        children: /*#__PURE__*/_jsxDEV(\"form\", {\n          noValidate: true,\n          autoComplete: \"off\",\n          children: [/*#__PURE__*/_jsxDEV(FormInput, {\n            label: \"Email\",\n            name: \"email\",\n            setData: setEmail\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 38,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(FormInput, {\n            label: \"Password\",\n            name: \"password\",\n            setData: setPassword,\n            type: \"password\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 39,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(CardActions, {\n        children: /*#__PURE__*/_jsxDEV(Button, {\n          color: \"primary\",\n          size: \"large\",\n          onClick: handleRegister,\n          children: \"Register\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Register, \"uO68YBmVPlK7kbAEOKsGl23TNjU=\", false, function () {\n  return [useHistory];\n});\n\n_c = Register;\nexport default Register;\n\nvar _c;\n\n$RefreshReg$(_c, \"Register\");","map":{"version":3,"sources":["/Users/nguyenvancong/Desktop/my-page/clients/src/components/pages/register/Register.jsx"],"names":["React","useState","useCallback","Card","CardHeader","CardContent","CardActions","Button","FormInput","registerUser","useHistory","Register","history","email","setEmail","password","setPassword","error","setError","message","status","handleRegister","then","data","user","push","catch","prevState","finally"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,WAA1B,QAA6C,OAA7C;AACA,SAASC,IAAT,EAAeC,UAAf,EAA2BC,WAA3B,EAAwCC,WAAxC,EAAqDC,MAArD,QAAmE,mBAAnE;AACA,OAAOC,SAAP,MAAsB,mCAAtB;AACA,SAASC,YAAT,QAA6B,sBAA7B;AACA,SAASC,UAAT,QAA2B,kBAA3B;;;AAEA,SAASC,QAAT,GAAoB;AAAA;;AAClB,QAAMC,OAAO,GAAGF,UAAU,EAA1B;AACA,QAAM,CAACG,KAAD,EAAQC,QAAR,IAAoBb,QAAQ,CAAC,EAAD,CAAlC;AACA,QAAM,CAACc,QAAD,EAAWC,WAAX,IAA0Bf,QAAQ,CAAC,EAAD,CAAxC;AACA,QAAM,CAACgB,KAAD,EAAQC,QAAR,IAAoBjB,QAAQ,CAAC;AAAEkB,IAAAA,OAAO,EAAE,EAAX;AAAeC,IAAAA,MAAM,EAAE;AAAvB,GAAD,CAAlC,CAJkB,CAMlB;;AACA,QAAMC,cAAc,GAAGnB,WAAW,CAAC,MAAM;AACvCO,IAAAA,YAAY,CAAC;AAAEI,MAAAA,KAAF;AAASE,MAAAA;AAAT,KAAD,CAAZ,CACGO,IADH,CACSC,IAAD,IAAU;AACd,UAAIA,IAAI,CAACC,IAAT,EAAe;AACbZ,QAAAA,OAAO,CAACa,IAAR,CAAa,QAAb;AACD;AACF,KALH,EAMGC,KANH,CAMUT,KAAD,IAAW;AAChBC,MAAAA,QAAQ,CAAES,SAAD,KAAgB,EACvB,GAAGA,SADoB;AAEvBR,QAAAA,OAAO,EAAEF,KAAK,CAACE,OAFQ;AAGvBC,QAAAA,MAAM,EAAE;AAHe,OAAhB,CAAD,CAAR;AAKD,KAZH,EAaGQ,OAbH,CAaW,MAAM,CAAE,CAbnB;AAcD,GAfiC,EAe/B,CAACf,KAAD,EAAQE,QAAR,EAAkBH,OAAlB,CAf+B,CAAlC;AAiBA,sBACE;AAAK,IAAA,SAAS,EAAC,gBAAf;AAAA,eACGK,KAAK,CAACG,MAAN,iBAAgB;AAAA,gBAAOH,KAAK,CAACE;AAAb;AAAA;AAAA;AAAA;AAAA,YADnB,eAEE,QAAC,IAAD;AAAA,8BACE,QAAC,UAAD;AAAY,QAAA,KAAK,EAAC;AAAlB;AAAA;AAAA;AAAA;AAAA,cADF,eAEE,QAAC,WAAD;AAAA,+BACE;AAAM,UAAA,UAAU,MAAhB;AAAiB,UAAA,YAAY,EAAC,KAA9B;AAAA,kCACE,QAAC,SAAD;AAAW,YAAA,KAAK,EAAC,OAAjB;AAAyB,YAAA,IAAI,EAAC,OAA9B;AAAsC,YAAA,OAAO,EAAEL;AAA/C;AAAA;AAAA;AAAA;AAAA,kBADF,eAEE,QAAC,SAAD;AAAW,YAAA,KAAK,EAAC,UAAjB;AAA4B,YAAA,IAAI,EAAC,UAAjC;AAA4C,YAAA,OAAO,EAAEE,WAArD;AAAkE,YAAA,IAAI,EAAC;AAAvE;AAAA;AAAA;AAAA;AAAA,kBAFF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cAFF,eAQE,QAAC,WAAD;AAAA,+BACE,QAAC,MAAD;AAAQ,UAAA,KAAK,EAAC,SAAd;AAAwB,UAAA,IAAI,EAAC,OAA7B;AAAqC,UAAA,OAAO,EAAEK,cAA9C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cARF;AAAA;AAAA;AAAA;AAAA;AAAA,YAFF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAmBD;;GA3CQV,Q;UACSD,U;;;KADTC,Q;AA6CT,eAAeA,QAAf","sourcesContent":["import React, { useState, useCallback } from 'react'\nimport { Card, CardHeader, CardContent, CardActions, Button } from '@material-ui/core'\nimport FormInput from 'components/common/input/FormInput'\nimport { registerUser } from 'services/userService'\nimport { useHistory } from 'react-router-dom'\n\nfunction Register() {\n  const history = useHistory()\n  const [email, setEmail] = useState('')\n  const [password, setPassword] = useState('')\n  const [error, setError] = useState({ message: '', status: false })\n\n  // Handle register\n  const handleRegister = useCallback(() => {\n    registerUser({ email, password })\n      .then((data) => {\n        if (data.user) {\n          history.push('/login')\n        }\n      })\n      .catch((error) => {\n        setError((prevState) => ({\n          ...prevState,\n          message: error.message,\n          status: true\n        }))\n      })\n      .finally(() => {})\n  }, [email, password, history])\n\n  return (\n    <div className=\"register login\">\n      {error.status && <span>{error.message}</span>}\n      <Card>\n        <CardHeader title=\"Register\" />\n        <CardContent>\n          <form noValidate autoComplete=\"off\">\n            <FormInput label=\"Email\" name=\"email\" setData={setEmail} />\n            <FormInput label=\"Password\" name=\"password\" setData={setPassword} type=\"password\" />\n          </form>\n        </CardContent>\n        <CardActions>\n          <Button color=\"primary\" size=\"large\" onClick={handleRegister}>\n            Register\n          </Button>\n        </CardActions>\n      </Card>\n    </div>\n  )\n}\n\nexport default Register\n"]},"metadata":{},"sourceType":"module"}