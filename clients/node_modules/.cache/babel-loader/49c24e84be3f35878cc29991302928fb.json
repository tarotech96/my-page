{"ast":null,"code":"import { takeLatest, put, call } from \"redux-saga/effects\";\nimport { getPosts, createPost } from \"./../actions/postAction\";\nimport * as api from \"./../../api/api\";\nimport { login } from \"redux/actions/userAction\";\n\nfunction* getAllPosts() {\n  try {\n    const res = yield call(api.getPosts);\n    console.log(res);\n\n    if (res.data.length) {\n      yield put(getPosts.getPostsSuccess(res.data));\n    }\n  } catch (error) {\n    yield put(getPosts.getPostsFailure(error));\n  }\n}\n\nfunction* createNewPost(action) {\n  try {\n    const res = yield call(api.createPost, action.payload);\n\n    if (res) {\n      yield put(createPost.createPostSuccess(res.data));\n    }\n  } catch (error) {\n    yield put(createPost.createPostFailure(error));\n  }\n}\n\nfunction* loginAction(action) {\n  try {\n    const res = yield call(api.login, action.payload);\n\n    if (res) {\n      yield put(login.loginSuccess(res.data));\n    }\n  } catch (error) {\n    yield put(login.loginFailure(error));\n  }\n}\n\nfunction* mySagas() {\n  yield takeLatest(getPosts.getPostsRequest, getAllPosts);\n  yield takeLatest(createPost.createPostRequest, createNewPost);\n  yield takeLatest(login.loginRequest, loginAction);\n}\n\nexport default mySagas;","map":{"version":3,"sources":["/Users/nguyenvancong/Desktop/my-page/clients/src/redux/sagas/index.js"],"names":["takeLatest","put","call","getPosts","createPost","api","login","getAllPosts","res","console","log","data","length","getPostsSuccess","error","getPostsFailure","createNewPost","action","payload","createPostSuccess","createPostFailure","loginAction","loginSuccess","loginFailure","mySagas","getPostsRequest","createPostRequest","loginRequest"],"mappings":"AAAA,SAASA,UAAT,EAAqBC,GAArB,EAA0BC,IAA1B,QAAsC,oBAAtC;AACA,SAASC,QAAT,EAAmBC,UAAnB,QAAqC,yBAArC;AACA,OAAO,KAAKC,GAAZ,MAAqB,iBAArB;AACA,SAASC,KAAT,QAAsB,0BAAtB;;AAEA,UAAUC,WAAV,GAAwB;AACtB,MAAI;AACF,UAAMC,GAAG,GAAG,MAAMN,IAAI,CAACG,GAAG,CAACF,QAAL,CAAtB;AACAM,IAAAA,OAAO,CAACC,GAAR,CAAYF,GAAZ;;AACA,QAAIA,GAAG,CAACG,IAAJ,CAASC,MAAb,EAAqB;AACnB,YAAMX,GAAG,CAACE,QAAQ,CAACU,eAAT,CAAyBL,GAAG,CAACG,IAA7B,CAAD,CAAT;AACD;AACF,GAND,CAME,OAAOG,KAAP,EAAc;AACd,UAAMb,GAAG,CAACE,QAAQ,CAACY,eAAT,CAAyBD,KAAzB,CAAD,CAAT;AACD;AACF;;AAED,UAAUE,aAAV,CAAwBC,MAAxB,EAAgC;AAC9B,MAAI;AACF,UAAMT,GAAG,GAAG,MAAMN,IAAI,CAACG,GAAG,CAACD,UAAL,EAAiBa,MAAM,CAACC,OAAxB,CAAtB;;AACA,QAAIV,GAAJ,EAAS;AACP,YAAMP,GAAG,CAACG,UAAU,CAACe,iBAAX,CAA6BX,GAAG,CAACG,IAAjC,CAAD,CAAT;AACD;AACF,GALD,CAKE,OAAOG,KAAP,EAAc;AACd,UAAMb,GAAG,CAACG,UAAU,CAACgB,iBAAX,CAA6BN,KAA7B,CAAD,CAAT;AACD;AACF;;AAED,UAAUO,WAAV,CAAsBJ,MAAtB,EAA8B;AAC5B,MAAI;AACF,UAAMT,GAAG,GAAG,MAAMN,IAAI,CAACG,GAAG,CAACC,KAAL,EAAYW,MAAM,CAACC,OAAnB,CAAtB;;AACA,QAAIV,GAAJ,EAAS;AACP,YAAMP,GAAG,CAACK,KAAK,CAACgB,YAAN,CAAmBd,GAAG,CAACG,IAAvB,CAAD,CAAT;AACD;AACF,GALD,CAKE,OAAOG,KAAP,EAAc;AACd,UAAMb,GAAG,CAACK,KAAK,CAACiB,YAAN,CAAmBT,KAAnB,CAAD,CAAT;AACD;AACF;;AAED,UAAUU,OAAV,GAAoB;AAClB,QAAMxB,UAAU,CAACG,QAAQ,CAACsB,eAAV,EAA2BlB,WAA3B,CAAhB;AACA,QAAMP,UAAU,CAACI,UAAU,CAACsB,iBAAZ,EAA+BV,aAA/B,CAAhB;AACA,QAAMhB,UAAU,CAACM,KAAK,CAACqB,YAAP,EAAqBN,WAArB,CAAhB;AACD;;AAED,eAAeG,OAAf","sourcesContent":["import { takeLatest, put, call } from \"redux-saga/effects\";\nimport { getPosts, createPost } from \"./../actions/postAction\";\nimport * as api from \"./../../api/api\";\nimport { login } from \"redux/actions/userAction\";\n\nfunction* getAllPosts() {\n  try {\n    const res = yield call(api.getPosts);\n    console.log(res)\n    if (res.data.length) {\n      yield put(getPosts.getPostsSuccess(res.data));\n    }\n  } catch (error) {\n    yield put(getPosts.getPostsFailure(error));\n  }\n}\n\nfunction* createNewPost(action) {\n  try {\n    const res = yield call(api.createPost, action.payload);\n    if (res) {\n      yield put(createPost.createPostSuccess(res.data));\n    }\n  } catch (error) {\n    yield put(createPost.createPostFailure(error));\n  }\n}\n\nfunction* loginAction(action) {\n  try {\n    const res = yield call(api.login, action.payload);\n    if (res) {\n      yield put(login.loginSuccess(res.data));\n    }\n  } catch (error) {\n    yield put(login.loginFailure(error));\n  }\n}\n\nfunction* mySagas() {\n  yield takeLatest(getPosts.getPostsRequest, getAllPosts);\n  yield takeLatest(createPost.createPostRequest, createNewPost);\n  yield takeLatest(login.loginRequest, loginAction);\n}\n\nexport default mySagas;\n"]},"metadata":{},"sourceType":"module"}