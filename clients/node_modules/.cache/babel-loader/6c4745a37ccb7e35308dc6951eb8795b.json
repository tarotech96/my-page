{"ast":null,"code":"import { takeLatest, put, call, actionChannel, take } from \"redux-saga/effects\";\nimport * as actions from \"./../actions/postAction\";\nimport * as api from \"./../../api/api\";\n\nfunction* getPosts() {\n  try {\n    const res = yield call(api.getPosts);\n\n    if (res.data.length) {\n      yield put(actions.getPosts.getPostsSuccess(res.data));\n    }\n  } catch (error) {\n    yield put(actions.getPosts.getPostsFailure(error));\n  }\n}\n\nfunction* createPost(data) {\n  try {\n    const res = yield call(api.createPost(data));\n\n    if (res) {\n      yield put(actions.createPost.createPostSuccess(res.data));\n    }\n  } catch (error) {\n    yield put(actions.createPost.createPostFailure(error));\n  }\n}\n\nfunction* mySagas() {\n  // yield takeLatest(actions.getPosts.getPostsRequest, getPosts);\n  const requestGetPostsTask = yield actionChannel(actions.getPosts.getPostsRequest);\n  const requestCreatePostTask = yield actionChannel(actions.createPost.createPostRequest);\n\n  while (true) {\n    const payloadGetPosts = yield take(requestGetPostsTask); // const  payloadCreatePost = yield take(requestCreatePostTask);\n\n    console.log(requestGetPostsTask, requestCreatePostTask);\n    yield call(getPosts, payloadGetPosts); // yield call(createPost, payloadCreatePost)\n  } // yield takeLatest(actions.createPost.createPostRequest, createPost);\n\n}\n\nexport default mySagas;","map":{"version":3,"sources":["/Users/nguyenvancong/Desktop/my-page/clients/src/redux/sagas/index.js"],"names":["takeLatest","put","call","actionChannel","take","actions","api","getPosts","res","data","length","getPostsSuccess","error","getPostsFailure","createPost","createPostSuccess","createPostFailure","mySagas","requestGetPostsTask","getPostsRequest","requestCreatePostTask","createPostRequest","payloadGetPosts","console","log"],"mappings":"AAAA,SAASA,UAAT,EAAqBC,GAArB,EAA0BC,IAA1B,EAAgCC,aAAhC,EAA+CC,IAA/C,QAA2D,oBAA3D;AACA,OAAO,KAAKC,OAAZ,MAAyB,yBAAzB;AACA,OAAO,KAAKC,GAAZ,MAAqB,iBAArB;;AAEA,UAAUC,QAAV,GAAqB;AACnB,MAAI;AACF,UAAMC,GAAG,GAAG,MAAMN,IAAI,CAACI,GAAG,CAACC,QAAL,CAAtB;;AACA,QAAIC,GAAG,CAACC,IAAJ,CAASC,MAAb,EAAqB;AACnB,YAAMT,GAAG,CAACI,OAAO,CAACE,QAAR,CAAiBI,eAAjB,CAAiCH,GAAG,CAACC,IAArC,CAAD,CAAT;AACD;AACF,GALD,CAKE,OAAOG,KAAP,EAAc;AACd,UAAMX,GAAG,CAACI,OAAO,CAACE,QAAR,CAAiBM,eAAjB,CAAiCD,KAAjC,CAAD,CAAT;AACD;AACF;;AAED,UAAUE,UAAV,CAAqBL,IAArB,EAA2B;AACzB,MAAI;AACF,UAAMD,GAAG,GAAG,MAAMN,IAAI,CAACI,GAAG,CAACQ,UAAJ,CAAeL,IAAf,CAAD,CAAtB;;AACA,QAAID,GAAJ,EAAS;AACP,YAAMP,GAAG,CAACI,OAAO,CAACS,UAAR,CAAmBC,iBAAnB,CAAqCP,GAAG,CAACC,IAAzC,CAAD,CAAT;AACD;AACF,GALD,CAKE,OAAOG,KAAP,EAAc;AACd,UAAMX,GAAG,CAACI,OAAO,CAACS,UAAR,CAAmBE,iBAAnB,CAAqCJ,KAArC,CAAD,CAAT;AACD;AACF;;AAED,UAAUK,OAAV,GAAoB;AAClB;AACA,QAAMC,mBAAmB,GAAG,MAAMf,aAAa,CAACE,OAAO,CAACE,QAAR,CAAiBY,eAAlB,CAA/C;AACA,QAAMC,qBAAqB,GAAG,MAAMjB,aAAa,CAACE,OAAO,CAACS,UAAR,CAAmBO,iBAApB,CAAjD;;AACA,SAAM,IAAN,EAAY;AACV,UAAMC,eAAe,GAAG,MAAMlB,IAAI,CAACc,mBAAD,CAAlC,CADU,CAEV;;AACAK,IAAAA,OAAO,CAACC,GAAR,CAAYN,mBAAZ,EAAiCE,qBAAjC;AACA,UAAMlB,IAAI,CAACK,QAAD,EAAWe,eAAX,CAAV,CAJU,CAKV;AACD,GAViB,CAWlB;;AACD;;AAED,eAAeL,OAAf","sourcesContent":["import { takeLatest, put, call, actionChannel, take } from \"redux-saga/effects\";\nimport * as actions from \"./../actions/postAction\";\nimport * as api from \"./../../api/api\";\n\nfunction* getPosts() {\n  try {\n    const res = yield call(api.getPosts);\n    if (res.data.length) {\n      yield put(actions.getPosts.getPostsSuccess(res.data));\n    }\n  } catch (error) {\n    yield put(actions.getPosts.getPostsFailure(error));\n  }\n}\n\nfunction* createPost(data) {\n  try {\n    const res = yield call(api.createPost(data));\n    if (res) {\n      yield put(actions.createPost.createPostSuccess(res.data));\n    }\n  } catch (error) {\n    yield put(actions.createPost.createPostFailure(error));\n  }\n}\n\nfunction* mySagas() {\n  // yield takeLatest(actions.getPosts.getPostsRequest, getPosts);\n  const requestGetPostsTask = yield actionChannel(actions.getPosts.getPostsRequest);\n  const requestCreatePostTask = yield actionChannel(actions.createPost.createPostRequest);\n  while(true) {\n    const payloadGetPosts = yield take(requestGetPostsTask);\n    // const  payloadCreatePost = yield take(requestCreatePostTask);\n    console.log(requestGetPostsTask, requestCreatePostTask)\n    yield call(getPosts, payloadGetPosts);\n    // yield call(createPost, payloadCreatePost)\n  }\n  // yield takeLatest(actions.createPost.createPostRequest, createPost);\n}\n\nexport default mySagas;\n"]},"metadata":{},"sourceType":"module"}