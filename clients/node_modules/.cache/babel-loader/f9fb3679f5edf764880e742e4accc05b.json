{"ast":null,"code":"/**\n * Format date with given specific format\n * @param date \n * @param format \n * @return formatted date\n */\nfunction formatDateWithPadding(date, format) {\n  if (date) {\n    if (typeof date == 'string') {\n      date = new Date(date);\n    }\n\n    format = format.replace(/yyyy/g, date.getFullYear());\n    format = format.replace(/MM/g, ('0' + (date.getMonth() + 1)).slice(-2));\n    format = format.replace(/dd/g, ('0' + date.getDate()).slice(-2));\n    format = format.replace(/HH/g, ('0' + date.getHours()).slice(-2));\n    format = format.replace(/mm/g, ('0' + date.getMinutes()).slice(-2));\n    format = format.replace(/ss/g, ('0' + date.getSeconds()).slice(-2));\n    format = format.replace(/SSS/g, ('00' + date.getMilliseconds()).slice(-3));\n  } else {\n    format = '';\n  }\n\n  return format;\n}\n\nexport { formatDateWithPadding };","map":{"version":3,"sources":["/Users/nguyenvancong/Desktop/my-page/clients/src/constants/utilities.js"],"names":["formatDateWithPadding","date","format","Date","replace","getFullYear","getMonth","slice","getDate","getHours","getMinutes","getSeconds","getMilliseconds"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA,SAASA,qBAAT,CAA+BC,IAA/B,EAAqCC,MAArC,EAA6C;AAC3C,MAAID,IAAJ,EAAU;AACR,QAAI,OAAOA,IAAP,IAAe,QAAnB,EAA6B;AAC3BA,MAAAA,IAAI,GAAG,IAAIE,IAAJ,CAASF,IAAT,CAAP;AACD;;AAEDC,IAAAA,MAAM,GAAGA,MAAM,CAACE,OAAP,CAAe,OAAf,EAAwBH,IAAI,CAACI,WAAL,EAAxB,CAAT;AACAH,IAAAA,MAAM,GAAGA,MAAM,CAACE,OAAP,CAAe,KAAf,EAAsB,CAAC,OAAOH,IAAI,CAACK,QAAL,KAAkB,CAAzB,CAAD,EAA8BC,KAA9B,CAAoC,CAAC,CAArC,CAAtB,CAAT;AACAL,IAAAA,MAAM,GAAGA,MAAM,CAACE,OAAP,CAAe,KAAf,EAAsB,CAAC,MAAMH,IAAI,CAACO,OAAL,EAAP,EAAuBD,KAAvB,CAA6B,CAAC,CAA9B,CAAtB,CAAT;AACAL,IAAAA,MAAM,GAAGA,MAAM,CAACE,OAAP,CAAe,KAAf,EAAsB,CAAC,MAAMH,IAAI,CAACQ,QAAL,EAAP,EAAwBF,KAAxB,CAA8B,CAAC,CAA/B,CAAtB,CAAT;AACAL,IAAAA,MAAM,GAAGA,MAAM,CAACE,OAAP,CAAe,KAAf,EAAsB,CAAC,MAAMH,IAAI,CAACS,UAAL,EAAP,EAA0BH,KAA1B,CAAgC,CAAC,CAAjC,CAAtB,CAAT;AACAL,IAAAA,MAAM,GAAGA,MAAM,CAACE,OAAP,CAAe,KAAf,EAAsB,CAAC,MAAMH,IAAI,CAACU,UAAL,EAAP,EAA0BJ,KAA1B,CAAgC,CAAC,CAAjC,CAAtB,CAAT;AACAL,IAAAA,MAAM,GAAGA,MAAM,CAACE,OAAP,CAAe,MAAf,EAAuB,CAAC,OAAOH,IAAI,CAACW,eAAL,EAAR,EAAgCL,KAAhC,CAAsC,CAAC,CAAvC,CAAvB,CAAT;AACD,GAZD,MAYO;AACLL,IAAAA,MAAM,GAAG,EAAT;AACD;;AACD,SAAOA,MAAP;AACD;;AAED,SAASF,qBAAT","sourcesContent":["/**\n * Format date with given specific format\n * @param date \n * @param format \n * @return formatted date\n */\nfunction formatDateWithPadding(date, format) {\n  if (date) {\n    if (typeof date == 'string') {\n      date = new Date(date)\n    }\n\n    format = format.replace(/yyyy/g, date.getFullYear())\n    format = format.replace(/MM/g, ('0' + (date.getMonth() + 1)).slice(-2))\n    format = format.replace(/dd/g, ('0' + date.getDate()).slice(-2))\n    format = format.replace(/HH/g, ('0' + date.getHours()).slice(-2))\n    format = format.replace(/mm/g, ('0' + date.getMinutes()).slice(-2))\n    format = format.replace(/ss/g, ('0' + date.getSeconds()).slice(-2))\n    format = format.replace(/SSS/g, ('00' + date.getMilliseconds()).slice(-3))\n  } else {\n    format = ''\n  }\n  return format\n}\n\nexport { formatDateWithPadding }"]},"metadata":{},"sourceType":"module"}