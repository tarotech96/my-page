{"ast":null,"code":"import { takeLatest, put, call } from \"redux-saga/effects\";\nimport * as actions from \"./../actions/postAction\";\nimport * as api from \"./../../api/api\";\n\nfunction* getPosts() {\n  try {\n    const res = yield call(api.getPosts);\n\n    if (res.data.length) {\n      yield put(actions.getPosts.getPostsSuccess(res.data));\n    }\n  } catch (error) {\n    yield put(actions.getPosts.getPostsFailure(error));\n  }\n}\n\nfunction* createPost(action) {\n  try {\n    const res = yield call(api.createPost(action.payload));\n    console.log(res);\n\n    if (res) {\n      yield put(actions.createPost.createPostSuccess(res.data));\n    }\n  } catch (error) {\n    yield put(actions.createPost.createPostFailure(error));\n  }\n}\n\nfunction* mySagas() {\n  yield takeLatest(actions.getPosts.getPostsRequest, getPosts);\n  yield takeLatest(actions.createPost.createPostRequest, createPost);\n}\n\nexport default mySagas;","map":{"version":3,"sources":["/Users/nguyenvancong/Desktop/my-page/clients/src/redux/sagas/index.js"],"names":["takeLatest","put","call","actions","api","getPosts","res","data","length","getPostsSuccess","error","getPostsFailure","createPost","action","payload","console","log","createPostSuccess","createPostFailure","mySagas","getPostsRequest","createPostRequest"],"mappings":"AAAA,SAASA,UAAT,EAAqBC,GAArB,EAA0BC,IAA1B,QAAsC,oBAAtC;AACA,OAAO,KAAKC,OAAZ,MAAyB,yBAAzB;AACA,OAAO,KAAKC,GAAZ,MAAqB,iBAArB;;AAEA,UAAUC,QAAV,GAAqB;AACnB,MAAI;AACF,UAAMC,GAAG,GAAG,MAAMJ,IAAI,CAACE,GAAG,CAACC,QAAL,CAAtB;;AACA,QAAIC,GAAG,CAACC,IAAJ,CAASC,MAAb,EAAqB;AACnB,YAAMP,GAAG,CAACE,OAAO,CAACE,QAAR,CAAiBI,eAAjB,CAAiCH,GAAG,CAACC,IAArC,CAAD,CAAT;AACD;AACF,GALD,CAKE,OAAOG,KAAP,EAAc;AACd,UAAMT,GAAG,CAACE,OAAO,CAACE,QAAR,CAAiBM,eAAjB,CAAiCD,KAAjC,CAAD,CAAT;AACD;AACF;;AAED,UAAUE,UAAV,CAAqBC,MAArB,EAA6B;AAC3B,MAAI;AACF,UAAMP,GAAG,GAAG,MAAMJ,IAAI,CAACE,GAAG,CAACQ,UAAJ,CAAeC,MAAM,CAACC,OAAtB,CAAD,CAAtB;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAYV,GAAZ;;AACA,QAAIA,GAAJ,EAAS;AACP,YAAML,GAAG,CAACE,OAAO,CAACS,UAAR,CAAmBK,iBAAnB,CAAqCX,GAAG,CAACC,IAAzC,CAAD,CAAT;AACD;AACF,GAND,CAME,OAAOG,KAAP,EAAc;AACd,UAAMT,GAAG,CAACE,OAAO,CAACS,UAAR,CAAmBM,iBAAnB,CAAqCR,KAArC,CAAD,CAAT;AACD;AACF;;AAED,UAAUS,OAAV,GAAoB;AAClB,QAAMnB,UAAU,CAACG,OAAO,CAACE,QAAR,CAAiBe,eAAlB,EAAmCf,QAAnC,CAAhB;AACA,QAAML,UAAU,CAACG,OAAO,CAACS,UAAR,CAAmBS,iBAApB,EAAuCT,UAAvC,CAAhB;AACD;;AAED,eAAeO,OAAf","sourcesContent":["import { takeLatest, put, call } from \"redux-saga/effects\";\nimport * as actions from \"./../actions/postAction\";\nimport * as api from \"./../../api/api\";\n\nfunction* getPosts() {\n  try {\n    const res = yield call(api.getPosts);\n    if (res.data.length) {\n      yield put(actions.getPosts.getPostsSuccess(res.data));\n    }\n  } catch (error) {\n    yield put(actions.getPosts.getPostsFailure(error));\n  }\n}\n\nfunction* createPost(action) {\n  try {\n    const res = yield call(api.createPost(action.payload));\n    console.log(res)\n    if (res) {\n      yield put(actions.createPost.createPostSuccess(res.data));\n    }\n  } catch (error) {\n    yield put(actions.createPost.createPostFailure(error));\n  }\n}\n\nfunction* mySagas() {\n  yield takeLatest(actions.getPosts.getPostsRequest, getPosts);\n  yield takeLatest(actions.createPost.createPostRequest, createPost);\n}\n\nexport default mySagas;\n"]},"metadata":{},"sourceType":"module"}